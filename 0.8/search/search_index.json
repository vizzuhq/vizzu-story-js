{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> <p>Vizzu-Story - Build and present animated data stories</p> <p> Documentation     \u00b7 Examples     \u00b7 Code reference     \u00b7 Repository     \u00b7 Blog </p> </p> <p> </p>"},{"location":"#vizzu-story","title":"Vizzu-Story","text":""},{"location":"#about-the-extension","title":"About The Extension","text":"<p><code>Vizzu-Story</code> is an extension for the Vizzu <code>JavaScript</code> library that allows users to create interactive presentations from the animated data visualizations built with <code>Vizzu</code>.</p> <p>The extension provides a <code>Web Component</code> that contains the presentation and adds controls for navigating between slides - predefined stages within the story.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install via npm:</p> <pre><code>npm install vizzu-story</code></pre> <p>Or use it from CDN:</p> <pre><code>import VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Create a <code>vizzu-player</code> element that will contain the rendered story:</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element import the extension from <code>CDN</code> or local install:</p> <pre><code>&lt;script type=\"module\"&gt;\n  import VizzuPlayer from \n  'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\n&lt;/script&gt;</code></pre> <p>Add the underlying data for the data story. You can use the same data definition formats as in the <code>Vizzu</code> library, but you must add the entire data set for the whole story in the initial step; you can not change this later. See Data chapter for more details on data formats.</p> <pre><code>const data = {\n    series: [{\n        name: 'Foo',\n        values: ['Alice', 'Bob', 'Ted']\n    }, {\n        name: 'Bar',\n        values: [15, 32, 12]\n    }, {\n        name: 'Baz',\n        values: [5, 3, 2]\n    }]\n}</code></pre> <p>Create the data story by defining a sequence of slides. A slide can be a single chart corresponding to an animate call from <code>Vizzu</code>. Or a slide can be a sequence of animation calls, in which case all of these animations will be played until the last one in the sequence, allowing for more complex transitions between slides.</p> <pre><code>const slides = [{\n    config: {\n        x: 'Foo',\n        y: 'Bar'\n    }\n}, {\n    config: {\n        color: 'Foo',\n        x: 'Baz',\n        geometry: 'circle'\n    }\n}]</code></pre> <p>Navigation controls beneath the chart will navigate between the slides. You can use the <code>PgUp</code> and <code>PgDn</code> buttons, left and right arrows to navigate between slides, and the <code>Home</code> and <code>End</code> buttons to jump to the first or last slide.</p> <p>On each chart, you can define the chart configuration and style with the same objects as in <code>Vizzu</code>. However, you can not modify the underlying data between the slides, only the data filter used.</p> <pre><code>interface Chart {\n  config?: Vizzu.Config.Chart\n  filter?: Vizzu.Data.FilterCallback | null\n  style?: Vizzu.Styles.Chart\n  animOptions?: Vizzu.Anim.Options\n}</code></pre> <p>Put the data and the slide list into the <code>story</code> descriptor object. Here you can also set the <code>story</code> <code>style</code> property to set the chart style used for the whole <code>story</code>.</p> <pre><code>const story = {\n    data: data,\n    slides: slides\n}</code></pre> <p>Then set up the created element with the configuration object:</p> <pre><code>const vp = document.querySelector('vizzu-player')\nvp.slides = story</code></pre> <p>Check out a live example in JSFiddle!</p>"},{"location":"#documentation","title":"Documentation","text":"<p>Visit our Documentation site for more details and a step-by-step tutorial into <code>Vizzu-Story</code> or check out our Example gallery.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to the project; visit our Contributing guide for further info.</p>"},{"location":"#contact","title":"Contact","text":"<ul> <li> <p>Join our Slack:     vizzu-community.slack.com</p> </li> <li> <p>Drop us a line at hello@vizzu.io</p> </li> <li> <p>Follow us on Twitter:     https://twitter.com/VizzuHQ</p> </li> </ul>"},{"location":"#license","title":"License","text":"<p>Copyright \u00a9 2022-2025 Vizzu Inc.</p> <p>Released under the Apache 2.0 License.</p>"},{"location":"CODE_OF_CONDUCT/","title":"Code of Conduct","text":"<p>See Code of Conduct of the <code>Vizzu</code> community.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":""},{"location":"CONTRIBUTING/#issues","title":"Issues","text":"<p>You can find our open issues in the project's issue tracker. Please let us know if you find any issues or have any feature requests there.</p>"},{"location":"CONTRIBUTING/#contributing_1","title":"Contributing","text":"<p>If you want to contribute to the project, your help is very welcome. Just fork the project, make your changes and send us a pull request. You can find the detailed description of how to do this in Github's guide to contributing to projects.</p> <p>Our Roadmap page is a comprehensive list of tasks we want to do in the future. It is a good place to start if you want to contribute to <code>Vizzu</code>. In case you have something else in mind, that's awesome and we are very interested in hearing about it.</p>"},{"location":"CONTRIBUTING/#ci-cd","title":"CI-CD","text":""},{"location":"CONTRIBUTING/#development-environment","title":"Development environment","text":"<p>For contributing to the project, it is recommended to use <code>Node.js</code> <code>22</code>. However, for the documentation we are also using <code>Python</code>. If you plan to contribute to this part of the project, you will need <code>Python</code>, preferably version <code>3.13</code>.</p> <p>The following steps demonstrate how to set up the development environment on an <code>Ubuntu</code> <code>24.04</code> operating system. However, the process can be adapted for other operating systems as well.</p> <p>To start using the <code>Vizzu-Story</code> development environment, you need to install the development dependencies.</p> <pre><code>npm install</code></pre> <p>If you want to work with the documantation too, you need to set up the <code>Python</code> development environment.</p> <pre><code>python3.13 -m venv \".venv\"\nsource .venv/bin/activate\npip install pdm==2.22.3\npdm install</code></pre> <p>The development requirements are installed based on the <code>package-lock.json</code> and <code>pdm.lock</code> files. To update the development requirements, you can use the command <code>npm run lock</code>.</p> <p>Note: For all available <code>npm</code> scripts, run <code>npm run --list</code>.</p> <p>For better development practices, you can set up <code>pre-commit</code> and <code>pre-push</code> hooks in your local <code>Git</code> repository. The <code>pre-commit</code> hook will format the code automatically, and the <code>pre-push</code> hook will run the CI steps before pushing your changes.</p> <pre><code>npx husky install</code></pre> <p>Note: The provided <code>pre-commit</code> and <code>pre-push</code> hook configuration file is tailored for <code>Ubuntu</code> <code>24.04</code>. If you intend to use another operating system, you may need to create a custom configuration file suitable for that environment.</p>"},{"location":"CONTRIBUTING/#ci","title":"CI","text":"<p>The CI pipeline includes code formatting checks, code analysis, typing validation, and unit tests for the <code>Vizzu-Story</code> project.</p> <p>To run the entire CI pipeline, execute the following <code>npm</code> script:</p> <pre><code>npm run ci</code></pre> <p>However, if you want to run the CI steps on specific parts of the project, you can use the following scripts: <code>ci:src</code>, <code>ci:docs</code>, or <code>ci:tools</code>.</p>"},{"location":"CONTRIBUTING/#formatting","title":"Formatting","text":"<p>You can check the code's formatting using the <code>format</code> script:</p> <pre><code>npm run format</code></pre> <p>If you need to fix any formatting issues, you can use the <code>fix-format</code> script:</p> <pre><code>npm run fix-format</code></pre> <p>If you wish to format specific parts of the project, you can use the following scripts: <code>format:src</code>, <code>format:docs</code>, <code>format:tools</code>, or <code>fix-format:src</code>, <code>fix-format:docs</code>, <code>fix-format:tools</code>.</p>"},{"location":"CONTRIBUTING/#code-analyses","title":"Code analyses","text":"<p>To perform code analyses, you can use the <code>lint</code> script:</p> <pre><code>npm run lint</code></pre> <p>If you need to run code analyses for specific parts of the project, you can utilize the following scripts: <code>lint:src</code>, <code>lint:docs</code>, or <code>lint:tools</code>.</p>"},{"location":"CONTRIBUTING/#typing","title":"Typing","text":"<p>For type checking, you can use the <code>type</code> script:</p> <pre><code>npm run type</code></pre> <p>If you want to check specific parts of the project, you can use the following scripts: <code>type:src</code> or <code>type:tools</code>.</p>"},{"location":"CONTRIBUTING/#testing","title":"Testing","text":"<p>The project is tested using the <code>jest</code> testing framework. To run the tests, you can use the <code>test</code> script:</p> <pre><code>npm test</code></pre>"},{"location":"CONTRIBUTING/#documentation","title":"Documentation","text":"<p>To build the documentation, you can use the <code>build-docs</code> script:</p> <pre><code>npm run build-docs</code></pre> <p>You can read the online version at vizzu-story.vizzuhq.com.</p>"},{"location":"CONTRIBUTING/#release","title":"Release","text":"<p><code>Vizzu-Story</code> is distributed on npm. Note: You need to be an administrator to release the project.</p> <p>To release <code>Vizzu-Story</code>, follow the steps below:</p> <ul> <li> <p>You should increase the version number in <code>package.json</code>. The version bump     should be in a separated commit.</p> </li> <li> <p>Generate the release notes and publish the new release on     Releases.</p> </li> </ul> <p>Note: Publishing a new release will automatically trigger the <code>cd</code> workflow which builds and uploads the <code>Vizzu-Story</code> package to npm.</p> <p>Before making a release, you can build and check the package using the <code>build</code> script:</p> <pre><code>npm run build</code></pre>"},{"location":"LICENSE/","title":"License","text":"<pre>Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</pre>"},{"location":"installation/","title":"Installation","text":"<p>Info</p> <p><code>Vizzu-Story</code> requires and downloads the Vizzu <code>JavaScript</code>/<code>C++</code> library from <code>jsDelivr CDN</code>, but you can also use a different or self-hosted version of it. Check Initialization chapter for more details.</p> <p>Install via npm:</p> <pre><code>npm install vizzu-story</code></pre> <p>Or use it from CDN:</p> <pre><code>import VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'</code></pre>"},{"location":"dev/","title":"Development","text":"<p>We have compiled some information on the development of <code>Vizzu-Story</code> here. If you're interested in contributing to our open-source tool (which we highly encourage), please refer to the Contributing chapter. Our community upholds a strict Code of Conduct that we expect all members to follow.</p> <ul> <li>Contributing</li> <li>Code of Conduct</li> </ul>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/_basic/","title":"Basic example","text":"<p>The below story shows a basic use case for <code>Vizzu-Story</code>.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\n\n// Get the created element\nconst vp = document.querySelector('vizzu-player')\n\n// Create data object\nconst data = {\n    series: [\n        {\n            name: 'Foo',\n            values: ['Alice', 'Bob', 'Ted']\n        },\n        {\n            name: 'Bar',\n            values: [15, 32, 12]\n        },\n        {\n            name: 'Baz',\n            values: [5, 3, 2]\n        }\n    ]\n}\n\n// Each slide here is a page in the final interactive story\nconst slides = [\n    {\n        config: {\n            x: 'Foo',\n            y: 'Bar'\n        }\n    },\n    {\n        config: {\n            color: 'Foo',\n            x: 'Baz',\n            geometry: 'circle'\n        }\n    }\n]\n\n// Create story configuration object, add data and slides to it\nconst story = {\n    data,\n    slides\n}\n\n// Set up the created element with the configuration object\nvp.slides = story\n</code></pre>"},{"location":"examples/linkedinpoll/","title":"Presentation Poll Results","text":"<p>In August, 2022, we asked data scientists in 5 LinkedIn groups about how often they have to present the results of their analysis to business stakeholders. This is a data story about the results of that poll.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\nimport Csv2Js from 'https://vizzu-story.vizzuhq.com/0.8/assets/javascripts/csv2js.js'\n\n// Get the created element\nconst vp = document.querySelector('vizzu-player')\n\n// Create data object\nconst dataLoaded = Csv2Js.csv('./linkedinpoll.csv', {\n    units: { 'Vote percentage': '%', 'GroupVote percentage': '%', 'Answer percentage': '%' }\n})\ndataLoaded.then((data) =&gt; {\n    // Each slide here is a page in the final interactive story\n    const slides = [\n        {\n            style: {\n                legend: {\n                    label: { fontSize: '1.1em' },\n                    paddingRight: '-1em'\n                },\n                plot: {\n                    marker: { label: { fontSize: '1.1em' } },\n                    paddingLeft: '10em',\n                    xAxis: {\n                        title: { color: '#00000000' },\n                        label: { fontSize: '1.1em' }\n                    },\n                    yAxis: { label: { fontSize: '1.1em' } }\n                },\n                logo: { width: '6em' },\n                fontSize: '0.8em'\n            },\n            config: {\n                x: { set: ['Vote percentage', 'Answer'] },\n                y: 'Group number',\n                color: 'Answer',\n                label: 'Vote percentage',\n                title: 'How often do you present your findings to business stakeholders?'\n            }\n        },\n        {\n            style: { plot: { xAxis: { label: { color: '#00000000' } } } },\n            config: {\n                split: true,\n                title: '2 or more is the most popular answer in every group'\n            }\n        },\n        {\n            style: {\n                plot: {\n                    marker: { label: { fontSize: '0.916667em' } }\n                }\n            },\n            config: {\n                x: { set: ['Vote count', 'Answer'] },\n                label: 'Vote count',\n                title: '61% of the votes came from one group'\n            }\n        },\n        [\n            {\n                style: { plot: { yAxis: { title: { color: '#00000000' } } } },\n                config: {\n                    x: 'Answer',\n                    y: ['Group number', 'Vote count'],\n                    split: false,\n                    legend: 'color'\n                }\n            },\n            {\n                style: { plot: { marker: { label: { fontSize: '1.1em' } } } },\n                config: { y: 'Vote count', title: 'More than 700 people voted' }\n            }\n        ],\n        [\n            {\n                config: {\n                    x: ['Answer percentage', 'Answer'],\n                    y: null,\n                    label: 'Answer percentage'\n                }\n            },\n            {\n                style: { plot: { xAxis: { label: { color: '#00000000' } } } },\n                config: {\n                    coordSystem: 'polar',\n                    title: 'More than two-third of respondents present at least once per month'\n                }\n            }\n        ]\n    ]\n\n    // Create story configuration object, add data and slides to it\n    const story = {\n        data,\n        slides\n    }\n\n    // Set the size of the HTML element\n    vp.style.cssText = 'width: 100%; height: 450px;'\n\n    // Set up the created element with the configuration object\n    vp.slides = story\n})\n</code></pre> <ul> <li> <p>Group 1: AI &amp; ML - Analytics ,     Data Science . SAP BI/ Analytics Cloud /Tableau /Power BI /Birst</p> </li> <li> <p>Group 2: Artificial Intelligence,     Digital Transformation Data Science, Automation, Machine Learning Analytics</p> </li> <li> <p>Group 3: Data Scientist, Data     Analyst and Data Engineer</p> </li> <li> <p>Group 4: Python Developers Community     (moderated)</p> </li> <li> <p>Group 5: Data Analytics, Data     Science, Business Analytics, Business Intelligence, Data Scientist &amp; Analyst</p> </li> </ul>"},{"location":"examples/population/","title":"UN Population Forecast","text":"<p>In this example, we explore the population of Africa between 1953-2098. On top of that, this story shows how to use the chart configuration presets. Check Vizzu - Chart presets chapter and Vizzu - Preset charts gallery for more details on the available chart presets.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\nimport Csv2Js from 'https://vizzu-story.vizzuhq.com/0.8/assets/javascripts/csv2js.js'\n\n// Get the created element\nconst vp = document.querySelector('vizzu-player')\n// Set the size of the HTML element\nvp.style.cssText = 'width: 100%; height: 400px;'\n// Initializing Vizzu Player\nconst vpInitialized = vp.initializing\n\n// Create data object\nconst dataLoaded = Csv2Js.csv('./population.csv', { dimensions: ['Year'] })\n\n// Because using presets here, you need to\n// create the configuration object after initialization\n// (then presets are accessible via vp.Vizzu.presets)\nPromise.all([dataLoaded, vpInitialized]).then((results) =&gt; {\n    const data = results[0]\n    const chart = results[1]\n\n    // Switch on the tooltip that appears\n    // when the user hovers the mouse over a chart element\n    chart.feature('tooltip', true)\n\n    // Each slide here is a page in the final interactive story\n    const slides = [\n        {\n            filter: (record) =&gt; record.Continent === 'Africa',\n            style: { plot: { xAxis: { label: { angle: 2.0 } } } },\n            config: vp.Vizzu.presets.stackedArea({\n                x: 'Year',\n                y: 'Medium',\n                stackedBy: 'Subregion',\n                title: 'Population of Africa 1953-2098'\n            })\n        },\n        {\n            config: vp.Vizzu.presets.percentageArea({\n                x: 'Year',\n                y: 'Medium',\n                stackedBy: 'Subregion'\n            })\n        },\n        {\n            config: vp.Vizzu.presets.stream({\n                x: 'Year',\n                y: 'Medium',\n                stackedBy: 'Subregion'\n            })\n        },\n        {\n            config: vp.Vizzu.presets.violin({\n                x: 'Year',\n                y: 'Medium',\n                splittedBy: 'Subregion'\n            })\n        }\n    ]\n\n    // Create story configuration object, add data and slides to it\n    const story = {\n        data,\n        slides\n    }\n\n    // Set up the created element with the configuration object\n    vp.slides = story\n})\n</code></pre>"},{"location":"examples/proglangs/","title":"Popularity of Programming Languages","text":"<p>What programming languages do data scientists use?</p> <p>This was one of the questions in the State of Data Science Reports published by Anaconda between 2020 and 2022. This data story shows the answers to this question.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\nimport Csv2Js from 'https://vizzu-story.vizzuhq.com/0.8/assets/javascripts/csv2js.js'\n\n// Get the created element\nconst vp = document.querySelector('vizzu-player')\n\n// Create data object\nconst dataLoaded = Csv2Js.csv('./proglangs.csv', { dimensions: ['Year'], units: { Value: '%' } })\n\ndataLoaded.then((data) =&gt; {\n    // Each slide here is a page in the final interactive story\n    const slides = [\n        {\n            filter: (record) =&gt; record.Year === '2022',\n            style: {\n                logo: { width: '5em' },\n                plot: {\n                    xAxis: { title: { color: '#00000000' } },\n                    paddingLeft: '2.5em',\n                    marker: {\n                        colorPalette:\n                            '#3DAE2BFF ' + '#00833EFF ' + '#00A19BFF ' + '#0075A9FF ' + '#003764FF',\n                        minLightness: 0,\n                        maxLightness: 0.4\n                    }\n                },\n                fontSize: '0.8em'\n            },\n            config: {\n                x: ['Popularity', 'Value'],\n                y: ['Language', 'Year', 'Lang_year'],\n                color: 'Popularity',\n                label: 'Value',\n                align: 'stretch',\n                title: 'Use of programming languages by data scientists in 2022',\n                lightness: 'Year',\n                legend: 'color'\n            }\n        },\n        {\n            style: { plot: { xAxis: { label: { color: '#00000000' } } } },\n            config: {\n                split: true,\n                align: 'none',\n                title: 'Python is always or frequently used by 58%'\n            }\n        },\n\n        [\n            {\n                style: { plot: { xAxis: { label: { color: '#999999FF' } } } },\n                config: { split: false, align: 'stretch' }\n            },\n            {\n                filter: (record) =&gt;\n                    (record.Popularity === 'Always' || record.Popularity === 'Frequently') &amp;&amp;\n                    record.Year === '2022',\n                config: { x: { range: { max: 100 } }, align: 'none' }\n            },\n            {\n                config: {\n                    sort: 'byValue',\n                    title: 'Python &amp; SQL are the most popular by a huge margin'\n                }\n            }\n        ],\n        [\n            {\n                config: {\n                    sort: 'none',\n                    title: \"Let's focus on the six languages with data since 2020\"\n                }\n            },\n            {\n                filter: (record) =&gt;\n                    (record.Popularity === 'Always' || record.Popularity === 'Frequently') &amp;&amp;\n                    (record.Language === 'R' ||\n                        record.Language === 'Python' ||\n                        record.Language === 'JavaScript' ||\n                        record.Language === 'Java' ||\n                        record.Language === 'C#' ||\n                        record.Language === 'C/C++') &amp;&amp;\n                    record.Year === '2022'\n            },\n            {\n                config: {\n                    y: ['Lang_year', 'Year'],\n                    x: ['Popularity', 'Language', 'Value']\n                }\n            }\n        ],\n        [\n            {\n                filter: (record) =&gt;\n                    (record.Popularity === 'Always' || record.Popularity === 'Frequently') &amp;&amp;\n                    (record.Language === 'R' ||\n                        record.Language === 'Python' ||\n                        record.Language === 'JavaScript' ||\n                        record.Language === 'Java' ||\n                        record.Language === 'C#' ||\n                        record.Language === 'C/C++') &amp;&amp;\n                    record.Year !== '2020'\n            },\n            {\n                filter: (record) =&gt;\n                    (record.Popularity === 'Always' || record.Popularity === 'Frequently') &amp;&amp;\n                    (record.Language === 'R' ||\n                        record.Language === 'Python' ||\n                        record.Language === 'JavaScript' ||\n                        record.Language === 'Java' ||\n                        record.Language === 'C#' ||\n                        record.Language === 'C/C++'),\n                config: {\n                    title: 'C/C++, C#, Java and Javascript are gaining popularity'\n                }\n            }\n        ]\n    ]\n\n    // Create story configuration object, add data and slides to it\n    const story = {\n        data,\n        slides\n    }\n\n    // Set the size of the HTML element\n    vp.style.cssText = 'width: 100%; height: 600px;'\n\n    // Set up the created element with the configuration object\n    vp.slides = story\n    vp.initializing.then((chart) =&gt; {\n        // Switch on the tooltip that appears\n        // when the user hovers the mouse over a chart element\n        chart.feature('tooltip', true)\n\n        // Set a handler that prevents showing specific elements\n        chart.on('plot-marker-label-draw', (event) =&gt; {\n            if (event.detail.text.split('%')[0] &lt; 5) event.preventDefault()\n        })\n    })\n})\n</code></pre>"},{"location":"examples/titanic/","title":"Passengers of the Titanic","text":"<p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\nimport Csv2Js from 'https://vizzu-story.vizzuhq.com/0.8/assets/javascripts/csv2js.js'\n\n// Get the created element\nconst vp = document.querySelector('vizzu-player')\n// Set the size of the HTML element\nvp.style.cssText = 'width: 100%; height: 400px;'\n// Initializing Vizzu Player\nconst vpInitialized = vp.initializing\n\n// Create data object\nconst dataLoaded = Csv2Js.csv('./titanic.csv', { dimensions: ['Pclass'] })\n\n// Because using presets here, you need to\n// create the configuration object after initialization\n// (then presets are accessible via vp.Vizzu.presets)\nPromise.all([dataLoaded, vpInitialized]).then((results) =&gt; {\n    const data = results[0]\n    const chart = results[1]\n\n    // Switch on the tooltip that appears\n    // when the user hovers the mouse over a chart element\n    chart.feature('tooltip', true)\n\n    // Set the style of the charts in the story\n    const style = {\n        plot: {\n            yAxis: {\n                label: { fontSize: '1em', paddingRight: '1.2em' },\n                title: { color: '#ffffff00' }\n            },\n            xAxis: {\n                label: {\n                    angle: '2.5',\n                    fontSize: '1.1em',\n                    paddingRight: '0em',\n                    paddingTop: '1em'\n                },\n                title: { fontSize: '1em', paddingTop: '2.5em' }\n            }\n        },\n        logo: { width: '5em' }\n    }\n\n    // Each slide here is a page in the final interactive story\n    const slides = [\n        [\n            {\n                config: vp.Vizzu.presets.bar({\n                    x: 'Count',\n                    title: 'Passengers of the Titanic'\n                })\n            }\n        ],\n        [\n            { config: vp.Vizzu.presets.stackedBar({ x: 'Count', stackedBy: 'Sex' }) },\n            {\n                config: vp.Vizzu.presets.groupedBar({\n                    x: 'Count',\n                    y: 'Sex',\n                    legend: 'color',\n                    title: 'Rougly one-third of the passengers were ladies'\n                })\n            }\n        ],\n        [\n            {\n                config: {\n                    x: ['Count', 'Survived'],\n                    y: 'Sex',\n                    color: 'Sex',\n                    lightness: 'Survived',\n                    label: ['Survived', 'Count']\n                }\n            },\n            {\n                config: {\n                    align: 'stretch',\n                    title: 'Much more women survived than men'\n                }\n            }\n        ],\n        [\n            {\n                config: {\n                    x: 'Count',\n                    align: 'none',\n                    label: null,\n                    lightness: null,\n                    title: \"Let's add the age of the passengers to the mix\"\n                }\n            },\n            { config: { y: ['Count', 'Sex'], x: 'Age_group', label: 'Count' } }\n        ],\n        [\n            {\n                config: {\n                    label: null,\n                    title: \"Let's see how many people survived/died in these age groups\"\n                }\n            },\n            {\n                config: {\n                    y: ['Count', 'Sex', 'Survived'],\n                    lightness: 'Survived',\n                    legend: 'lightness'\n                }\n            },\n            { config: { y: ['Count', 'Survived', 'Sex'] } }\n        ],\n        [\n            {\n                config: {\n                    align: 'stretch',\n                    title: 'Survival rate varies a bit between age groups'\n                }\n            }\n        ],\n        [\n            {\n                filter: (record) =&gt; record.Sex === 'male',\n                config: {\n                    title: 'But again shows a very different picture for men...'\n                }\n            }\n        ],\n        [\n            { filter: null },\n            {\n                filter: (record) =&gt; record.Sex === 'female',\n                config: { title: '...and women' }\n            }\n        ]\n    ]\n\n    // Create story configuration object, add data and slides to it\n    const story = {\n        data,\n        style,\n        slides\n    }\n\n    // Set up the created element with the configuration object\n    vp.slides = story\n})\n</code></pre>"},{"location":"examples/trumptwitter/","title":"Trump Twitter Tirade","text":"<p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\nimport Csv2Js from 'https://vizzu-story.vizzuhq.com/0.8/assets/javascripts/csv2js.js'\n\n// Get the created element\nconst vp = document.querySelector('vizzu-player')\n\n// Create data object\nconst dataLoaded = Csv2Js.csv('./trumptwitter.csv', {\n    measures: [\n        'NewtoTwitter',\n        'Businessman',\n        'Nominee',\n        'President',\n        'RT_New to Twitter',\n        'RT_Businessman',\n        'RT_Nominee',\n        'RT_President',\n        'Obama'\n    ]\n})\n\ndataLoaded.then((data) =&gt; {\n    // Set the style of the charts in the story\n    const style = {\n        tooltip: { fontSize: '22px' },\n        title: { paddingTop: '1.2em', fontSize: '2.5em' },\n        legend: { label: { fontSize: '1.8em' }, width: '16em' },\n        logo: { width: '6em' },\n        plot: {\n            marker: { label: { fontSize: '1.5em' } },\n            yAxis: {\n                label: { fontSize: '1.5em' },\n                title: { color: '#ffffff00' },\n                interlacing: { color: '#ffffff00' }\n            },\n            xAxis: {\n                label: { fontSize: '1.6em', paddingTop: '1em' },\n                title: { fontSize: '1.4em', paddingTop: '2.5em' }\n            }\n        }\n    }\n\n    // Each slide here is a page in the final interactive story\n    const slides = [\n        [\n            {\n                filter: (record) =&gt; record.Firsttweet === 'Yes' &amp;&amp; record.Dummy === 'No',\n                config: {\n                    channels: {\n                        y: { set: ['tweets'] },\n                        x: { set: ['Period', 'year', 'month'] },\n                        color: 'Period'\n                    },\n                    title: \"Trump started tweeting in May '09\"\n                }\n            }\n        ],\n        [\n            {\n                filter: (record) =&gt; record.Period === 'New to Twitter' &amp;&amp; record.Dummy === 'No',\n                config: { title: \"In the first two years he wasn't very active\" }\n            }\n        ],\n        [\n            {\n                filter: (record) =&gt;\n                    (record.Period === 'New to Twitter' || record.Period === 'Businessman') &amp;&amp;\n                    record.Dummy === 'No',\n                config: { title: 'Then he got hooked on' }\n            }\n        ],\n        [\n            {\n                filter: (record) =&gt;\n                    (record.Period === 'New to Twitter' ||\n                        record.Period === 'Businessman' ||\n                        record.Period === 'Nominee') &amp;&amp;\n                    record.Dummy === 'No',\n                config: {\n                    title: 'Interesting trend after becoming a presidential nominee'\n                }\n            }\n        ],\n        [\n            {\n                filter: (record) =&gt; record.Dummy === 'No',\n                config: { title: 'And after he became President' }\n            }\n        ],\n        [\n            { config: { geometry: 'area', align: 'center' } },\n            { config: { title: \"All of Trump's tweets until May 2020\" } }\n        ],\n        [\n            {\n                config: {\n                    y: 'retweetcount',\n                    title: 'And the number of times these were retweeted'\n                }\n            }\n        ],\n        [\n            {\n                config: {\n                    y: 'tweets',\n                    title: \"Let's focus on the number of tweets for now\"\n                }\n            },\n            { config: { x: { set: ['year', 'month'] }, color: null } }\n        ],\n        [\n            {\n                config: {\n                    y: ['tweets', 'Type'],\n                    color: 'Type',\n                    title: 'Original tweets, retweets &amp; replies sent'\n                },\n                style: {\n                    plot: { marker: { colorPalette: '#A0CDEBFF #60C0E6FF #1DA1F3FF' } }\n                }\n            }\n        ],\n        [\n            {\n                config: { split: true, align: 'none' },\n                style: { plot: { yAxis: { label: { color: '#ffffff00' } } } }\n            }\n        ],\n        [\n            {\n                config: {\n                    split: false,\n                    align: 'stretch',\n                    title: 'Original tweets, retweets &amp; replies sent (%)'\n                },\n                style: { plot: { yAxis: { label: { color: '#999999ff' } } } }\n            }\n        ],\n        [\n            { config: { align: 'center', title: '' } },\n            {\n                config: { y: 'tweets', color: null, legend: 'lightness' },\n                style: { plot: { marker: { colorPalette: 'null' } } }\n            },\n            {\n                config: {\n                    y: ['tweets', 'Tool'],\n                    color: 'Tool',\n                    title: 'Tools Trump Used to Tweet',\n                    legend: 'color'\n                },\n                style: {\n                    plot: {\n                        marker: {\n                            colorPalette: '#597696FF #ED2828FF #26EC87FF #29B9BFFF '\n                        }\n                    }\n                }\n            }\n        ],\n        [\n            {\n                config: { split: true, align: 'none' },\n                style: { plot: { yAxis: { label: { color: '#ffffff00' } } } }\n            }\n        ],\n        [\n            { config: { geometry: 'rectangle' } },\n            {\n                config: {\n                    x: ['tweets', 'year', 'month'],\n                    y: 'Tool',\n                    geometry: 'rectangle',\n                    split: false,\n                    align: 'none'\n                },\n                style: {\n                    plot: {\n                        xAxis: { title: { color: '#ffffff00' } },\n                        yAxis: { label: { color: '#999999ff' } }\n                    }\n                }\n            },\n            { config: { x: 'tweets', label: 'tweets' } }\n        ],\n        [\n            { config: { x: ['tweets', 'AMPM', 'hour12'], label: null } },\n            {\n                config: {\n                    y: { set: ['tweets', 'Tool'], range: { min: '110%', max: '0%' } },\n                    x: ['AMPM', 'hour12']\n                }\n            },\n            { config: { geometry: 'area' } },\n            {\n                config: {\n                    coordSystem: 'polar',\n                    angle: Math.PI,\n                    title: 'Time of Day When Trump Tweeted'\n                },\n                style: {\n                    plot: {\n                        yAxis: { label: { color: '#ffffff00' } },\n                        xAxis: {\n                            label: {\n                                fontSize: '2em',\n                                paddingBottom: '2.5em',\n                                paddingTop: '2.5em',\n                                paddingLeft: '2.5em',\n                                paddingRight: '2.5em'\n                            }\n                        }\n                    }\n                }\n            }\n        ],\n        [\n            {\n                config: {\n                    y: ['Businessman', 'Tool'],\n                    title: 'Times Trump Tweeted When Being a Businessman'\n                }\n            }\n        ],\n        [\n            {\n                config: {\n                    y: ['President', 'Tool'],\n                    title: 'Times Trump Tweeted When Being President'\n                }\n            }\n        ]\n    ]\n\n    // Create story configuration object, add data and slides to it\n    const story = {\n        data,\n        style,\n        slides\n    }\n\n    // Set the size of the HTML element\n    vp.style.cssText = 'width: 100%; height: 400px;'\n\n    // Set up the created element with the configuration object\n    vp.slides = story\n    vp.initializing.then((chart) =&gt; {\n        // Switch on the tooltip that appears\n        // when the user hovers the mouse over a chart element\n        chart.feature('tooltip', true)\n    })\n})\n</code></pre>"},{"location":"examples/usbudget/","title":"US Federal R&amp;D budget","text":"<p>US Federal R&amp;D budget In this more involved example, we explore the history of the US Federal R&amp;D budget between 1955-2020. On top of the base functionality, this story showcases:</p> <ul> <li>Styling the overall story</li> <li>Setting the size of the story</li> <li>Slides with multiple steps</li> </ul> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\nimport Csv2Js from 'https://vizzu-story.vizzuhq.com/0.8/assets/javascripts/csv2js.js'\n\n// Get the created element\nconst vp = document.querySelector('vizzu-player')\n\n// Create data object\nconst dataLoaded = Csv2Js.csv('./usbudget.csv', { dimensions: ['Year'], units: { Amount: 'B$' } })\n\ndataLoaded.then((data) =&gt; {\n    // Set the style of the charts in the story\n\n    const style = {\n        plot: {\n            yAxis: {\n                label: {\n                    fontSize: '1em',\n                    paddingRight: '1.2em'\n                },\n                title: { color: '#ffffff00' }\n            },\n            xAxis: {\n                label: {\n                    angle: '2.5',\n                    fontSize: '1.1em',\n                    paddingRight: '0em',\n                    paddingTop: '1em'\n                },\n                title: { fontSize: '0.8em', paddingTop: '2.5em' }\n            }\n        },\n        logo: { width: '5em' }\n    }\n\n    // Each slide here is a page in the final interactive story\n    const slides = [\n        // Add the first slide,\n        // containing a single animation step that sets the initial chart\n        {\n            // Only include rows where the Function value != Defense\n            filter: (record) =&gt; record.Function !== 'Defense',\n            config: {\n                channels: {\n                    y: {\n                        set: ['Amount', 'Function'],\n                        // Set the range of the y-axis\n                        // to the min and max of the data being shown\n                        // default value is 110% of the maximum value\n                        range: { min: '0%', max: '100%' }\n                    },\n                    x: { set: ['Year'] },\n                    color: 'Function'\n                },\n                title: 'Stacked Area Chart - U.S. R&amp;D Budget in 1955-2020',\n                geometry: 'area'\n            }\n        },\n        // Show components side-by-side\n        {\n            config: {\n                split: true,\n                title: 'Show Components Side by Side'\n            }\n        },\n        // This slide contains multiple steps\n        [\n            // Step 1 - let's get back to the previous view\n            { config: { split: false } },\n            // Step 2 - Add the defense function to the chart by removing it from the filter\n            {\n                filter: null,\n                config: { title: 'Add New Category While Keeping the Context' }\n            }\n        ],\n        // Show share of components\n        {\n            config: {\n                align: 'stretch',\n                title: 'Show Share of Components (%)'\n            }\n        },\n        // Compare data from 1955 and 2020\n        [\n            // Step 1 - switch back to value instead of percentage\n            { config: { align: 'none' } },\n            // Step 2 - switch to a stacked column chart by changing the geometry\n            {\n                config: {\n                    geometry: 'rectangle'\n                }\n            },\n            // Step 3 - zoom to data from the first and last years\n            {\n                filter: (record) =&gt; record.Year === '1955' || record.Year === '2020',\n                config: {\n                    title: 'Zoom to Specific Elements'\n                }\n            }\n        ],\n        // Group &amp; rearrange elements for comparison\n        [\n            {\n                config: {\n                    x: ['Year', 'Function'],\n                    y: 'Amount',\n                    label: 'Amount',\n                    title: 'Group &amp; Rearrange for Better Comparison'\n                }\n            },\n            {\n                config: { x: ['Function', 'Year'] }\n            }\n        ]\n    ]\n\n    // Create story configuration object, add data, style and slides to it\n    const story = {\n        data,\n        style,\n        slides\n    }\n\n    // Set the size of the HTML element\n    vp.style.cssText = 'width: 100%; height: 400px;'\n\n    // Set up the created element with the configuration object\n    vp.slides = story\n    vp.initializing.then((chart) =&gt; {\n        // Switch on the tooltip that appears\n        // when the user hovers the mouse over a chart element\n        chart.feature('tooltip', true)\n\n        // Set a handler that prevents showing the year values that are not divisible by 5\n        chart.on('plot-axis-label-draw', (event) =&gt; {\n            const Year = parseFloat(event.detail.text)\n            if (!isNaN(Year) &amp;&amp; Year &gt; 1950 &amp;&amp; Year &lt; 2020 &amp;&amp; Year % 5 !== 0) {\n                event.preventDefault()\n            }\n        })\n    })\n})\n</code></pre>"},{"location":"reference/","title":"Vizzu-Story JS Library Reference","text":"<p>This is the API reference document of the <code>Vizzu-Story</code> <code>JS</code> library. It provides information about every detail of the API. This works best for users who already have a basic understanding of the <code>Vizzu-Story</code> library and its logic.</p> <p>In case you're just getting started with <code>Vizzu-Story</code>, we strongly recommend visiting our Tutorial first.</p>"},{"location":"reference/#library-overview","title":"Library Overview","text":"<p>The main entry point of the library is the VizzuPlayer class, and its most important component is the slides accessor.</p> <ul> <li>VizzuPlayer class<ul> <li>constructor()</li> <li>slides (Story) :     <code>void</code></li> </ul> </li> </ul>"},{"location":"reference/#details","title":"Details","text":"<p>You can find all interface declarations and types under these namespaces.</p> <ul> <li>Story - Contains slides, underlying data and chart's     style settings</li> <li>Phase - A single step of a slide</li> </ul>"},{"location":"reference/globals/","title":"Globals","text":"<p>Vizzu-Story</p>"},{"location":"reference/globals/#vizzu-story","title":"Vizzu-Story","text":""},{"location":"reference/globals/#namespaces","title":"Namespaces","text":"<ul> <li>Vizzu</li> </ul>"},{"location":"reference/globals/#classes","title":"Classes","text":"<ul> <li>VizzuPlayer</li> </ul>"},{"location":"reference/globals/#interfaces","title":"Interfaces","text":"<ul> <li>Phase</li> <li>Story</li> </ul>"},{"location":"reference/globals/#type-aliases","title":"Type Aliases","text":"<ul> <li>Slide</li> <li>Vizzu</li> </ul>"},{"location":"reference/classes/VizzuPlayer/","title":"VizzuPlayer","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / VizzuPlayer</p>"},{"location":"reference/classes/VizzuPlayer/#class-vizzuplayer","title":"Class: VizzuPlayer","text":""},{"location":"reference/classes/VizzuPlayer/#extends","title":"Extends","text":"<ul> <li><code>HTMLElement</code></li> </ul>"},{"location":"reference/classes/VizzuPlayer/#constructors","title":"Constructors","text":""},{"location":"reference/classes/VizzuPlayer/#new-vizzuplayer","title":"new VizzuPlayer()","text":"<p>new VizzuPlayer(): <code>VizzuPlayer</code></p> <p>Returns</p> <p><code>VizzuPlayer</code></p> <p>Inherited from</p> <p><code>HTMLElement.constructor</code></p>"},{"location":"reference/classes/VizzuPlayer/#properties","title":"Properties","text":""},{"location":"reference/classes/VizzuPlayer/#accesskey","title":"accessKey","text":"<p>accessKey: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.accessKey</code></p>"},{"location":"reference/classes/VizzuPlayer/#accesskeylabel","title":"accessKeyLabel","text":"<p><code>readonly</code> accessKeyLabel: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.accessKeyLabel</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaatomic","title":"ariaAtomic","text":"<p>ariaAtomic: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaAtomic</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaautocomplete","title":"ariaAutoComplete","text":"<p>ariaAutoComplete: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaAutoComplete</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariabraillelabel","title":"ariaBrailleLabel","text":"<p>ariaBrailleLabel: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaBrailleLabel</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariabrailleroledescription","title":"ariaBrailleRoleDescription","text":"<p>ariaBrailleRoleDescription: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaBrailleRoleDescription</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariabusy","title":"ariaBusy","text":"<p>ariaBusy: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaBusy</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariachecked","title":"ariaChecked","text":"<p>ariaChecked: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaChecked</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariacolcount","title":"ariaColCount","text":"<p>ariaColCount: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaColCount</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariacolindex","title":"ariaColIndex","text":"<p>ariaColIndex: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaColIndex</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariacolindextext","title":"ariaColIndexText","text":"<p>ariaColIndexText: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaColIndexText</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariacolspan","title":"ariaColSpan","text":"<p>ariaColSpan: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaColSpan</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariacurrent","title":"ariaCurrent","text":"<p>ariaCurrent: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaCurrent</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariadescription","title":"ariaDescription","text":"<p>ariaDescription: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaDescription</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariadisabled","title":"ariaDisabled","text":"<p>ariaDisabled: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaDisabled</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaexpanded","title":"ariaExpanded","text":"<p>ariaExpanded: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaExpanded</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariahaspopup","title":"ariaHasPopup","text":"<p>ariaHasPopup: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaHasPopup</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariahidden","title":"ariaHidden","text":"<p>ariaHidden: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaHidden</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariainvalid","title":"ariaInvalid","text":"<p>ariaInvalid: <code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.ariaInvalid</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariakeyshortcuts","title":"ariaKeyShortcuts","text":"<p>ariaKeyShortcuts: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaKeyShortcuts</code></p>"},{"location":"reference/classes/VizzuPlayer/#arialabel","title":"ariaLabel","text":"<p>ariaLabel: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaLabel</code></p>"},{"location":"reference/classes/VizzuPlayer/#arialevel","title":"ariaLevel","text":"<p>ariaLevel: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaLevel</code></p>"},{"location":"reference/classes/VizzuPlayer/#arialive","title":"ariaLive","text":"<p>ariaLive: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaLive</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariamodal","title":"ariaModal","text":"<p>ariaModal: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaModal</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariamultiline","title":"ariaMultiLine","text":"<p>ariaMultiLine: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaMultiLine</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariamultiselectable","title":"ariaMultiSelectable","text":"<p>ariaMultiSelectable: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaMultiSelectable</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaorientation","title":"ariaOrientation","text":"<p>ariaOrientation: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaOrientation</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaplaceholder","title":"ariaPlaceholder","text":"<p>ariaPlaceholder: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaPlaceholder</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaposinset","title":"ariaPosInSet","text":"<p>ariaPosInSet: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaPosInSet</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariapressed","title":"ariaPressed","text":"<p>ariaPressed: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaPressed</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariareadonly","title":"ariaReadOnly","text":"<p>ariaReadOnly: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaReadOnly</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariarequired","title":"ariaRequired","text":"<p>ariaRequired: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaRequired</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaroledescription","title":"ariaRoleDescription","text":"<p>ariaRoleDescription: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaRoleDescription</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariarowcount","title":"ariaRowCount","text":"<p>ariaRowCount: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaRowCount</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariarowindex","title":"ariaRowIndex","text":"<p>ariaRowIndex: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaRowIndex</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariarowindextext","title":"ariaRowIndexText","text":"<p>ariaRowIndexText: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaRowIndexText</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariarowspan","title":"ariaRowSpan","text":"<p>ariaRowSpan: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaRowSpan</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariaselected","title":"ariaSelected","text":"<p>ariaSelected: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaSelected</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariasetsize","title":"ariaSetSize","text":"<p>ariaSetSize: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaSetSize</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariasort","title":"ariaSort","text":"<p>ariaSort: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaSort</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluemax","title":"ariaValueMax","text":"<p>ariaValueMax: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaValueMax</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluemin","title":"ariaValueMin","text":"<p>ariaValueMin: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaValueMin</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluenow","title":"ariaValueNow","text":"<p>ariaValueNow: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaValueNow</code></p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluetext","title":"ariaValueText","text":"<p>ariaValueText: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ariaValueText</code></p>"},{"location":"reference/classes/VizzuPlayer/#assignedslot","title":"assignedSlot","text":"<p><code>readonly</code> assignedSlot: <code>HTMLSlotElement</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.assignedSlot</code></p>"},{"location":"reference/classes/VizzuPlayer/#attribute_node","title":"ATTRIBUTE_NODE","text":"<p><code>readonly</code> ATTRIBUTE_NODE: <code>2</code></p> <p>Inherited from</p> <p><code>HTMLElement.ATTRIBUTE_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#attributes","title":"attributes","text":"<p><code>readonly</code> attributes: <code>NamedNodeMap</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.attributes</code></p>"},{"location":"reference/classes/VizzuPlayer/#attributestylemap","title":"attributeStyleMap","text":"<p><code>readonly</code> attributeStyleMap: <code>StylePropertyMap</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.attributeStyleMap</code></p>"},{"location":"reference/classes/VizzuPlayer/#autocapitalize","title":"autocapitalize","text":"<p>autocapitalize: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.autocapitalize</code></p>"},{"location":"reference/classes/VizzuPlayer/#autofocus","title":"autofocus","text":"<p>autofocus: <code>boolean</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.autofocus</code></p>"},{"location":"reference/classes/VizzuPlayer/#baseuri","title":"baseURI","text":"<p><code>readonly</code> baseURI: <code>string</code></p> <p>Returns node's node document's document base URL.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.baseURI</code></p>"},{"location":"reference/classes/VizzuPlayer/#cdata_section_node","title":"CDATA_SECTION_NODE","text":"<p><code>readonly</code> CDATA_SECTION_NODE: <code>4</code></p> <p>node is a CDATASection node.</p> <p>Inherited from</p> <p><code>HTMLElement.CDATA_SECTION_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#childelementcount","title":"childElementCount","text":"<p><code>readonly</code> childElementCount: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.childElementCount</code></p>"},{"location":"reference/classes/VizzuPlayer/#childnodes","title":"childNodes","text":"<p><code>readonly</code> childNodes: <code>NodeListOf</code>\\&lt;<code>ChildNode</code>&gt;</p> <p>Returns the children.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.childNodes</code></p>"},{"location":"reference/classes/VizzuPlayer/#children","title":"children","text":"<p><code>readonly</code> children: <code>HTMLCollection</code></p> <p>Returns the child elements.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.children</code></p>"},{"location":"reference/classes/VizzuPlayer/#classlist","title":"classList","text":"<p><code>readonly</code> classList: <code>DOMTokenList</code></p> <p>Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.classList</code></p>"},{"location":"reference/classes/VizzuPlayer/#classname","title":"className","text":"<p>className: <code>string</code></p> <p>Returns the value of element's class content attribute. Can be set to change it.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.className</code></p>"},{"location":"reference/classes/VizzuPlayer/#clientheight","title":"clientHeight","text":"<p><code>readonly</code> clientHeight: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.clientHeight</code></p>"},{"location":"reference/classes/VizzuPlayer/#clientleft","title":"clientLeft","text":"<p><code>readonly</code> clientLeft: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.clientLeft</code></p>"},{"location":"reference/classes/VizzuPlayer/#clienttop","title":"clientTop","text":"<p><code>readonly</code> clientTop: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.clientTop</code></p>"},{"location":"reference/classes/VizzuPlayer/#clientwidth","title":"clientWidth","text":"<p><code>readonly</code> clientWidth: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.clientWidth</code></p>"},{"location":"reference/classes/VizzuPlayer/#comment_node","title":"COMMENT_NODE","text":"<p><code>readonly</code> COMMENT_NODE: <code>8</code></p> <p>node is a Comment node.</p> <p>Inherited from</p> <p><code>HTMLElement.COMMENT_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#contenteditable","title":"contentEditable","text":"<p>contentEditable: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.contentEditable</code></p>"},{"location":"reference/classes/VizzuPlayer/#currentcsszoom","title":"currentCSSZoom","text":"<p><code>readonly</code> currentCSSZoom: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.currentCSSZoom</code></p>"},{"location":"reference/classes/VizzuPlayer/#dataset","title":"dataset","text":"<p><code>readonly</code> dataset: <code>DOMStringMap</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.dataset</code></p>"},{"location":"reference/classes/VizzuPlayer/#dir","title":"dir","text":"<p>dir: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.dir</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_fragment_node","title":"DOCUMENT_FRAGMENT_NODE","text":"<p><code>readonly</code> DOCUMENT_FRAGMENT_NODE: <code>11</code></p> <p>node is a DocumentFragment node.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_FRAGMENT_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_node","title":"DOCUMENT_NODE","text":"<p><code>readonly</code> DOCUMENT_NODE: <code>9</code></p> <p>node is a document.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_position_contained_by","title":"DOCUMENT_POSITION_CONTAINED_BY","text":"<p><code>readonly</code> DOCUMENT_POSITION_CONTAINED_BY: <code>16</code></p> <p>Set when other is a descendant of node.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_POSITION_CONTAINED_BY</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_position_contains","title":"DOCUMENT_POSITION_CONTAINS","text":"<p><code>readonly</code> DOCUMENT_POSITION_CONTAINS: <code>8</code></p> <p>Set when other is an ancestor of node.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_POSITION_CONTAINS</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_position_disconnected","title":"DOCUMENT_POSITION_DISCONNECTED","text":"<p><code>readonly</code> DOCUMENT_POSITION_DISCONNECTED: <code>1</code></p> <p>Set when node and other are not in the same tree.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_POSITION_DISCONNECTED</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_position_following","title":"DOCUMENT_POSITION_FOLLOWING","text":"<p><code>readonly</code> DOCUMENT_POSITION_FOLLOWING: <code>4</code></p> <p>Set when other is following node.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_POSITION_FOLLOWING</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_position_implementation_specific","title":"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","text":"<p><code>readonly</code> DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: <code>32</code></p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_position_preceding","title":"DOCUMENT_POSITION_PRECEDING","text":"<p><code>readonly</code> DOCUMENT_POSITION_PRECEDING: <code>2</code></p> <p>Set when other is preceding node.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_POSITION_PRECEDING</code></p>"},{"location":"reference/classes/VizzuPlayer/#document_type_node","title":"DOCUMENT_TYPE_NODE","text":"<p><code>readonly</code> DOCUMENT_TYPE_NODE: <code>10</code></p> <p>node is a doctype.</p> <p>Inherited from</p> <p><code>HTMLElement.DOCUMENT_TYPE_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#draggable","title":"draggable","text":"<p>draggable: <code>boolean</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.draggable</code></p>"},{"location":"reference/classes/VizzuPlayer/#element_node","title":"ELEMENT_NODE","text":"<p><code>readonly</code> ELEMENT_NODE: <code>1</code></p> <p>node is an element.</p> <p>Inherited from</p> <p><code>HTMLElement.ELEMENT_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#enterkeyhint","title":"enterKeyHint","text":"<p>enterKeyHint: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.enterKeyHint</code></p>"},{"location":"reference/classes/VizzuPlayer/#entity_node","title":"ENTITY_NODE","text":"<p><code>readonly</code> ENTITY_NODE: <code>6</code></p> <p>Inherited from</p> <p><code>HTMLElement.ENTITY_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#entity_reference_node","title":"ENTITY_REFERENCE_NODE","text":"<p><code>readonly</code> ENTITY_REFERENCE_NODE: <code>5</code></p> <p>Inherited from</p> <p><code>HTMLElement.ENTITY_REFERENCE_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#firstchild","title":"firstChild","text":"<p><code>readonly</code> firstChild: <code>ChildNode</code></p> <p>Returns the first child.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.firstChild</code></p>"},{"location":"reference/classes/VizzuPlayer/#firstelementchild","title":"firstElementChild","text":"<p><code>readonly</code> firstElementChild: <code>Element</code></p> <p>Returns the first child that is an element, and null otherwise.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.firstElementChild</code></p>"},{"location":"reference/classes/VizzuPlayer/#hidden","title":"hidden","text":"<p>hidden: <code>boolean</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.hidden</code></p>"},{"location":"reference/classes/VizzuPlayer/#id","title":"id","text":"<p>id: <code>string</code></p> <p>Returns the value of element's id content attribute. Can be set to change it.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.id</code></p>"},{"location":"reference/classes/VizzuPlayer/#inert","title":"inert","text":"<p>inert: <code>boolean</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.inert</code></p>"},{"location":"reference/classes/VizzuPlayer/#innerhtml","title":"innerHTML","text":"<p>innerHTML: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.innerHTML</code></p>"},{"location":"reference/classes/VizzuPlayer/#innertext","title":"innerText","text":"<p>innerText: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.innerText</code></p>"},{"location":"reference/classes/VizzuPlayer/#inputmode","title":"inputMode","text":"<p>inputMode: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.inputMode</code></p>"},{"location":"reference/classes/VizzuPlayer/#isconnected","title":"isConnected","text":"<p><code>readonly</code> isConnected: <code>boolean</code></p> <p>Returns true if node is connected and false otherwise.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.isConnected</code></p>"},{"location":"reference/classes/VizzuPlayer/#iscontenteditable","title":"isContentEditable","text":"<p><code>readonly</code> isContentEditable: <code>boolean</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.isContentEditable</code></p>"},{"location":"reference/classes/VizzuPlayer/#lang","title":"lang","text":"<p>lang: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.lang</code></p>"},{"location":"reference/classes/VizzuPlayer/#lastchild","title":"lastChild","text":"<p><code>readonly</code> lastChild: <code>ChildNode</code></p> <p>Returns the last child.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.lastChild</code></p>"},{"location":"reference/classes/VizzuPlayer/#lastelementchild","title":"lastElementChild","text":"<p><code>readonly</code> lastElementChild: <code>Element</code></p> <p>Returns the last child that is an element, and null otherwise.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.lastElementChild</code></p>"},{"location":"reference/classes/VizzuPlayer/#localname","title":"localName","text":"<p><code>readonly</code> localName: <code>string</code></p> <p>Returns the local name.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.localName</code></p>"},{"location":"reference/classes/VizzuPlayer/#namespaceuri","title":"namespaceURI","text":"<p><code>readonly</code> namespaceURI: <code>string</code></p> <p>Returns the namespace.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.namespaceURI</code></p>"},{"location":"reference/classes/VizzuPlayer/#nextelementsibling","title":"nextElementSibling","text":"<p><code>readonly</code> nextElementSibling: <code>Element</code></p> <p>Returns the first following sibling that is an element, and null otherwise.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.nextElementSibling</code></p>"},{"location":"reference/classes/VizzuPlayer/#nextsibling","title":"nextSibling","text":"<p><code>readonly</code> nextSibling: <code>ChildNode</code></p> <p>Returns the next sibling.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.nextSibling</code></p>"},{"location":"reference/classes/VizzuPlayer/#nodename","title":"nodeName","text":"<p><code>readonly</code> nodeName: <code>string</code></p> <p>Returns a string appropriate for the type of node.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.nodeName</code></p>"},{"location":"reference/classes/VizzuPlayer/#nodetype","title":"nodeType","text":"<p><code>readonly</code> nodeType: <code>number</code></p> <p>Returns the type of node.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.nodeType</code></p>"},{"location":"reference/classes/VizzuPlayer/#nodevalue","title":"nodeValue","text":"<p>nodeValue: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.nodeValue</code></p>"},{"location":"reference/classes/VizzuPlayer/#nonce","title":"nonce?","text":"<p><code>optional</code> nonce: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.nonce</code></p>"},{"location":"reference/classes/VizzuPlayer/#notation_node","title":"NOTATION_NODE","text":"<p><code>readonly</code> NOTATION_NODE: <code>12</code></p> <p>Inherited from</p> <p><code>HTMLElement.NOTATION_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#offsetheight","title":"offsetHeight","text":"<p><code>readonly</code> offsetHeight: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.offsetHeight</code></p>"},{"location":"reference/classes/VizzuPlayer/#offsetleft","title":"offsetLeft","text":"<p><code>readonly</code> offsetLeft: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.offsetLeft</code></p>"},{"location":"reference/classes/VizzuPlayer/#offsetparent","title":"offsetParent","text":"<p><code>readonly</code> offsetParent: <code>Element</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.offsetParent</code></p>"},{"location":"reference/classes/VizzuPlayer/#offsettop","title":"offsetTop","text":"<p><code>readonly</code> offsetTop: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.offsetTop</code></p>"},{"location":"reference/classes/VizzuPlayer/#offsetwidth","title":"offsetWidth","text":"<p><code>readonly</code> offsetWidth: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.offsetWidth</code></p>"},{"location":"reference/classes/VizzuPlayer/#onabort","title":"onabort()","text":"<p>onabort: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user aborts the download.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>UIEvent</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onabort</code></p>"},{"location":"reference/classes/VizzuPlayer/#onanimationcancel","title":"onanimationcancel()","text":"<p>onanimationcancel: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>AnimationEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onanimationcancel</code></p>"},{"location":"reference/classes/VizzuPlayer/#onanimationend","title":"onanimationend()","text":"<p>onanimationend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>AnimationEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onanimationend</code></p>"},{"location":"reference/classes/VizzuPlayer/#onanimationiteration","title":"onanimationiteration()","text":"<p>onanimationiteration: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>AnimationEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onanimationiteration</code></p>"},{"location":"reference/classes/VizzuPlayer/#onanimationstart","title":"onanimationstart()","text":"<p>onanimationstart: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>AnimationEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onanimationstart</code></p>"},{"location":"reference/classes/VizzuPlayer/#onauxclick","title":"onauxclick()","text":"<p>onauxclick: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onauxclick</code></p>"},{"location":"reference/classes/VizzuPlayer/#onbeforeinput","title":"onbeforeinput()","text":"<p>onbeforeinput: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>InputEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onbeforeinput</code></p>"},{"location":"reference/classes/VizzuPlayer/#onbeforetoggle","title":"onbeforetoggle()","text":"<p>onbeforetoggle: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onbeforetoggle</code></p>"},{"location":"reference/classes/VizzuPlayer/#onblur","title":"onblur()","text":"<p>onblur: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the object loses the input focus.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>FocusEvent</code></p> <p>The focus event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onblur</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncancel","title":"oncancel()","text":"<p>oncancel: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncancel</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncanplay","title":"oncanplay()","text":"<p>oncanplay: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when playback is possible, but would require further buffering.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncanplay</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncanplaythrough","title":"oncanplaythrough()","text":"<p>oncanplaythrough: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncanplaythrough</code></p>"},{"location":"reference/classes/VizzuPlayer/#onchange","title":"onchange()","text":"<p>onchange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the contents of the object or selection have changed.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onchange</code></p>"},{"location":"reference/classes/VizzuPlayer/#onclick","title":"onclick()","text":"<p>onclick: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user clicks the left mouse button on the object</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onclick</code></p>"},{"location":"reference/classes/VizzuPlayer/#onclose","title":"onclose()","text":"<p>onclose: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onclose</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncontextlost","title":"oncontextlost()","text":"<p>oncontextlost: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncontextlost</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncontextmenu","title":"oncontextmenu()","text":"<p>oncontextmenu: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user clicks the right mouse button in the client area, opening the context menu.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncontextmenu</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncontextrestored","title":"oncontextrestored()","text":"<p>oncontextrestored: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncontextrestored</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncopy","title":"oncopy()","text":"<p>oncopy: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>ClipboardEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncopy</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncuechange","title":"oncuechange()","text":"<p>oncuechange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncuechange</code></p>"},{"location":"reference/classes/VizzuPlayer/#oncut","title":"oncut()","text":"<p>oncut: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>ClipboardEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oncut</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondblclick","title":"ondblclick()","text":"<p>ondblclick: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user double-clicks the object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondblclick</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondrag","title":"ondrag()","text":"<p>ondrag: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires on the source object continuously during a drag operation.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>DragEvent</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondrag</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondragend","title":"ondragend()","text":"<p>ondragend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires on the source object when the user releases the mouse at the close of a drag operation.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>DragEvent</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondragend</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondragenter","title":"ondragenter()","text":"<p>ondragenter: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires on the target element when the user drags the object to a valid drop target.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>DragEvent</code></p> <p>The drag event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondragenter</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondragleave","title":"ondragleave()","text":"<p>ondragleave: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>DragEvent</code></p> <p>The drag event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondragleave</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondragover","title":"ondragover()","text":"<p>ondragover: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires on the target element continuously while the user drags the object over a valid drop target.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>DragEvent</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondragover</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondragstart","title":"ondragstart()","text":"<p>ondragstart: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires on the source object when the user starts to drag a text selection or selected object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>DragEvent</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondragstart</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondrop","title":"ondrop()","text":"<p>ondrop: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>DragEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondrop</code></p>"},{"location":"reference/classes/VizzuPlayer/#ondurationchange","title":"ondurationchange()","text":"<p>ondurationchange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the duration attribute is updated.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ondurationchange</code></p>"},{"location":"reference/classes/VizzuPlayer/#onemptied","title":"onemptied()","text":"<p>onemptied: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the media element is reset to its initial state.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onemptied</code></p>"},{"location":"reference/classes/VizzuPlayer/#onended","title":"onended()","text":"<p>onended: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the end of playback is reached.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onended</code></p>"},{"location":"reference/classes/VizzuPlayer/#onerror","title":"onerror","text":"<p>onerror: <code>OnErrorEventHandlerNonNull</code></p> <p>Fires when an error occurs during object loading.</p> <p>Param</p> <p>The event.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.onerror</code></p>"},{"location":"reference/classes/VizzuPlayer/#onfocus","title":"onfocus()","text":"<p>onfocus: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the object receives focus.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>FocusEvent</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onfocus</code></p>"},{"location":"reference/classes/VizzuPlayer/#onformdata","title":"onformdata()","text":"<p>onformdata: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>FormDataEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onformdata</code></p>"},{"location":"reference/classes/VizzuPlayer/#onfullscreenchange","title":"onfullscreenchange()","text":"<p>onfullscreenchange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>Element</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onfullscreenchange</code></p>"},{"location":"reference/classes/VizzuPlayer/#onfullscreenerror","title":"onfullscreenerror()","text":"<p>onfullscreenerror: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>Element</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onfullscreenerror</code></p>"},{"location":"reference/classes/VizzuPlayer/#ongotpointercapture","title":"ongotpointercapture()","text":"<p>ongotpointercapture: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ongotpointercapture</code></p>"},{"location":"reference/classes/VizzuPlayer/#oninput","title":"oninput()","text":"<p>oninput: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oninput</code></p>"},{"location":"reference/classes/VizzuPlayer/#oninvalid","title":"oninvalid()","text":"<p>oninvalid: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.oninvalid</code></p>"},{"location":"reference/classes/VizzuPlayer/#onkeydown","title":"onkeydown()","text":"<p>onkeydown: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user presses a key.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>KeyboardEvent</code></p> <p>The keyboard event</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onkeydown</code></p>"},{"location":"reference/classes/VizzuPlayer/#onkeypress","title":"~~onkeypress()~~","text":"<p>onkeypress: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user presses an alphanumeric key.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>KeyboardEvent</code></p> <p>The event.</p> <p>Returns</p> <p><code>any</code></p> <p>Deprecated</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.onkeypress</code></p>"},{"location":"reference/classes/VizzuPlayer/#onkeyup","title":"onkeyup()","text":"<p>onkeyup: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user releases a key.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>KeyboardEvent</code></p> <p>The keyboard event</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onkeyup</code></p>"},{"location":"reference/classes/VizzuPlayer/#onload","title":"onload()","text":"<p>onload: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires immediately after the browser loads the object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onload</code></p>"},{"location":"reference/classes/VizzuPlayer/#onloadeddata","title":"onloadeddata()","text":"<p>onloadeddata: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when media data is loaded at the current playback position.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onloadeddata</code></p>"},{"location":"reference/classes/VizzuPlayer/#onloadedmetadata","title":"onloadedmetadata()","text":"<p>onloadedmetadata: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the duration and dimensions of the media have been determined.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onloadedmetadata</code></p>"},{"location":"reference/classes/VizzuPlayer/#onloadstart","title":"onloadstart()","text":"<p>onloadstart: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when Internet Explorer begins looking for media data.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onloadstart</code></p>"},{"location":"reference/classes/VizzuPlayer/#onlostpointercapture","title":"onlostpointercapture()","text":"<p>onlostpointercapture: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onlostpointercapture</code></p>"},{"location":"reference/classes/VizzuPlayer/#onmousedown","title":"onmousedown()","text":"<p>onmousedown: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user clicks the object with either mouse button.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onmousedown</code></p>"},{"location":"reference/classes/VizzuPlayer/#onmouseenter","title":"onmouseenter()","text":"<p>onmouseenter: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onmouseenter</code></p>"},{"location":"reference/classes/VizzuPlayer/#onmouseleave","title":"onmouseleave()","text":"<p>onmouseleave: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onmouseleave</code></p>"},{"location":"reference/classes/VizzuPlayer/#onmousemove","title":"onmousemove()","text":"<p>onmousemove: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user moves the mouse over the object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onmousemove</code></p>"},{"location":"reference/classes/VizzuPlayer/#onmouseout","title":"onmouseout()","text":"<p>onmouseout: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user moves the mouse pointer outside the boundaries of the object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onmouseout</code></p>"},{"location":"reference/classes/VizzuPlayer/#onmouseover","title":"onmouseover()","text":"<p>onmouseover: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user moves the mouse pointer into the object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onmouseover</code></p>"},{"location":"reference/classes/VizzuPlayer/#onmouseup","title":"onmouseup()","text":"<p>onmouseup: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user releases a mouse button while the mouse is over the object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>MouseEvent</code></p> <p>The mouse event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onmouseup</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpaste","title":"onpaste()","text":"<p>onpaste: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>ClipboardEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpaste</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpause","title":"onpause()","text":"<p>onpause: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when playback is paused.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpause</code></p>"},{"location":"reference/classes/VizzuPlayer/#onplay","title":"onplay()","text":"<p>onplay: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the play method is requested.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onplay</code></p>"},{"location":"reference/classes/VizzuPlayer/#onplaying","title":"onplaying()","text":"<p>onplaying: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the audio or video has started playing.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onplaying</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointercancel","title":"onpointercancel()","text":"<p>onpointercancel: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointercancel</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointerdown","title":"onpointerdown()","text":"<p>onpointerdown: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointerdown</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointerenter","title":"onpointerenter()","text":"<p>onpointerenter: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointerenter</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointerleave","title":"onpointerleave()","text":"<p>onpointerleave: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointerleave</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointermove","title":"onpointermove()","text":"<p>onpointermove: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointermove</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointerout","title":"onpointerout()","text":"<p>onpointerout: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointerout</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointerover","title":"onpointerover()","text":"<p>onpointerover: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointerover</code></p>"},{"location":"reference/classes/VizzuPlayer/#onpointerup","title":"onpointerup()","text":"<p>onpointerup: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>PointerEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onpointerup</code></p>"},{"location":"reference/classes/VizzuPlayer/#onprogress","title":"onprogress()","text":"<p>onprogress: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs to indicate progress while downloading media data.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>ProgressEvent</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onprogress</code></p>"},{"location":"reference/classes/VizzuPlayer/#onratechange","title":"onratechange()","text":"<p>onratechange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the playback rate is increased or decreased.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onratechange</code></p>"},{"location":"reference/classes/VizzuPlayer/#onreset","title":"onreset()","text":"<p>onreset: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user resets a form.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onreset</code></p>"},{"location":"reference/classes/VizzuPlayer/#onresize","title":"onresize()","text":"<p>onresize: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>UIEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onresize</code></p>"},{"location":"reference/classes/VizzuPlayer/#onscroll","title":"onscroll()","text":"<p>onscroll: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the user repositions the scroll box in the scroll bar on the object.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onscroll</code></p>"},{"location":"reference/classes/VizzuPlayer/#onscrollend","title":"onscrollend()","text":"<p>onscrollend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onscrollend</code></p>"},{"location":"reference/classes/VizzuPlayer/#onsecuritypolicyviolation","title":"onsecuritypolicyviolation()","text":"<p>onsecuritypolicyviolation: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>SecurityPolicyViolationEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onsecuritypolicyviolation</code></p>"},{"location":"reference/classes/VizzuPlayer/#onseeked","title":"onseeked()","text":"<p>onseeked: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the seek operation ends.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onseeked</code></p>"},{"location":"reference/classes/VizzuPlayer/#onseeking","title":"onseeking()","text":"<p>onseeking: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the current playback position is moved.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onseeking</code></p>"},{"location":"reference/classes/VizzuPlayer/#onselect","title":"onselect()","text":"<p>onselect: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Fires when the current selection changes.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onselect</code></p>"},{"location":"reference/classes/VizzuPlayer/#onselectionchange","title":"onselectionchange()","text":"<p>onselectionchange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onselectionchange</code></p>"},{"location":"reference/classes/VizzuPlayer/#onselectstart","title":"onselectstart()","text":"<p>onselectstart: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onselectstart</code></p>"},{"location":"reference/classes/VizzuPlayer/#onslotchange","title":"onslotchange()","text":"<p>onslotchange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onslotchange</code></p>"},{"location":"reference/classes/VizzuPlayer/#onstalled","title":"onstalled()","text":"<p>onstalled: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the download has stopped.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onstalled</code></p>"},{"location":"reference/classes/VizzuPlayer/#onsubmit","title":"onsubmit()","text":"<p>onsubmit: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>SubmitEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onsubmit</code></p>"},{"location":"reference/classes/VizzuPlayer/#onsuspend","title":"onsuspend()","text":"<p>onsuspend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs if the load operation has been intentionally halted.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onsuspend</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontimeupdate","title":"ontimeupdate()","text":"<p>ontimeupdate: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs to indicate the current playback position.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontimeupdate</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontoggle","title":"ontoggle()","text":"<p>ontoggle: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontoggle</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontouchcancel","title":"ontouchcancel()?","text":"<p><code>optional</code> ontouchcancel: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TouchEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontouchcancel</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontouchend","title":"ontouchend()?","text":"<p><code>optional</code> ontouchend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TouchEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontouchend</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontouchmove","title":"ontouchmove()?","text":"<p><code>optional</code> ontouchmove: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TouchEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontouchmove</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontouchstart","title":"ontouchstart()?","text":"<p><code>optional</code> ontouchstart: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TouchEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontouchstart</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontransitioncancel","title":"ontransitioncancel()","text":"<p>ontransitioncancel: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TransitionEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontransitioncancel</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontransitionend","title":"ontransitionend()","text":"<p>ontransitionend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TransitionEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontransitionend</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontransitionrun","title":"ontransitionrun()","text":"<p>ontransitionrun: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TransitionEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontransitionrun</code></p>"},{"location":"reference/classes/VizzuPlayer/#ontransitionstart","title":"ontransitionstart()","text":"<p>ontransitionstart: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>TransitionEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.ontransitionstart</code></p>"},{"location":"reference/classes/VizzuPlayer/#onvolumechange","title":"onvolumechange()","text":"<p>onvolumechange: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when the volume is changed, or playback is muted or unmuted.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onvolumechange</code></p>"},{"location":"reference/classes/VizzuPlayer/#onwaiting","title":"onwaiting()","text":"<p>onwaiting: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Occurs when playback stops because the next frame of a video resource is not available.</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>The event.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onwaiting</code></p>"},{"location":"reference/classes/VizzuPlayer/#onwebkitanimationend","title":"~~onwebkitanimationend()~~","text":"<p>onwebkitanimationend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Deprecated</p> <p>This is a legacy alias of <code>onanimationend</code>.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.onwebkitanimationend</code></p>"},{"location":"reference/classes/VizzuPlayer/#onwebkitanimationiteration","title":"~~onwebkitanimationiteration()~~","text":"<p>onwebkitanimationiteration: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Deprecated</p> <p>This is a legacy alias of <code>onanimationiteration</code>.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.onwebkitanimationiteration</code></p>"},{"location":"reference/classes/VizzuPlayer/#onwebkitanimationstart","title":"~~onwebkitanimationstart()~~","text":"<p>onwebkitanimationstart: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Deprecated</p> <p>This is a legacy alias of <code>onanimationstart</code>.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.onwebkitanimationstart</code></p>"},{"location":"reference/classes/VizzuPlayer/#onwebkittransitionend","title":"~~onwebkittransitionend()~~","text":"<p>onwebkittransitionend: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>Event</code></p> <p>Returns</p> <p><code>any</code></p> <p>Deprecated</p> <p>This is a legacy alias of <code>ontransitionend</code>.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.onwebkittransitionend</code></p>"},{"location":"reference/classes/VizzuPlayer/#onwheel","title":"onwheel()","text":"<p>onwheel: (<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>this</p> <p><code>GlobalEventHandlers</code></p> <p>ev</p> <p><code>WheelEvent</code></p> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p><code>HTMLElement.onwheel</code></p>"},{"location":"reference/classes/VizzuPlayer/#outerhtml","title":"outerHTML","text":"<p>outerHTML: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.outerHTML</code></p>"},{"location":"reference/classes/VizzuPlayer/#outertext","title":"outerText","text":"<p>outerText: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.outerText</code></p>"},{"location":"reference/classes/VizzuPlayer/#ownerdocument","title":"ownerDocument","text":"<p><code>readonly</code> ownerDocument: <code>Document</code></p> <p>Returns the node document. Returns null for documents.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.ownerDocument</code></p>"},{"location":"reference/classes/VizzuPlayer/#parentelement","title":"parentElement","text":"<p><code>readonly</code> parentElement: <code>HTMLElement</code></p> <p>Returns the parent element.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.parentElement</code></p>"},{"location":"reference/classes/VizzuPlayer/#parentnode","title":"parentNode","text":"<p><code>readonly</code> parentNode: <code>ParentNode</code></p> <p>Returns the parent.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.parentNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#part","title":"part","text":"<p><code>readonly</code> part: <code>DOMTokenList</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.part</code></p>"},{"location":"reference/classes/VizzuPlayer/#popover","title":"popover","text":"<p>popover: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.popover</code></p>"},{"location":"reference/classes/VizzuPlayer/#prefix","title":"prefix","text":"<p><code>readonly</code> prefix: <code>string</code></p> <p>Returns the namespace prefix.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.prefix</code></p>"},{"location":"reference/classes/VizzuPlayer/#previouselementsibling","title":"previousElementSibling","text":"<p><code>readonly</code> previousElementSibling: <code>Element</code></p> <p>Returns the first preceding sibling that is an element, and null otherwise.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.previousElementSibling</code></p>"},{"location":"reference/classes/VizzuPlayer/#previoussibling","title":"previousSibling","text":"<p><code>readonly</code> previousSibling: <code>ChildNode</code></p> <p>Returns the previous sibling.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.previousSibling</code></p>"},{"location":"reference/classes/VizzuPlayer/#processing_instruction_node","title":"PROCESSING_INSTRUCTION_NODE","text":"<p><code>readonly</code> PROCESSING_INSTRUCTION_NODE: <code>7</code></p> <p>node is a ProcessingInstruction node.</p> <p>Inherited from</p> <p><code>HTMLElement.PROCESSING_INSTRUCTION_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#role","title":"role","text":"<p>role: <code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.role</code></p>"},{"location":"reference/classes/VizzuPlayer/#scrollheight","title":"scrollHeight","text":"<p><code>readonly</code> scrollHeight: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.scrollHeight</code></p>"},{"location":"reference/classes/VizzuPlayer/#scrollleft","title":"scrollLeft","text":"<p>scrollLeft: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.scrollLeft</code></p>"},{"location":"reference/classes/VizzuPlayer/#scrolltop","title":"scrollTop","text":"<p>scrollTop: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.scrollTop</code></p>"},{"location":"reference/classes/VizzuPlayer/#scrollwidth","title":"scrollWidth","text":"<p><code>readonly</code> scrollWidth: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.scrollWidth</code></p>"},{"location":"reference/classes/VizzuPlayer/#shadowroot","title":"shadowRoot","text":"<p><code>readonly</code> shadowRoot: <code>ShadowRoot</code></p> <p>Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.shadowRoot</code></p>"},{"location":"reference/classes/VizzuPlayer/#slot","title":"slot","text":"<p>slot: <code>string</code></p> <p>Returns the value of element's slot content attribute. Can be set to change it.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.slot</code></p>"},{"location":"reference/classes/VizzuPlayer/#spellcheck","title":"spellcheck","text":"<p>spellcheck: <code>boolean</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.spellcheck</code></p>"},{"location":"reference/classes/VizzuPlayer/#style","title":"style","text":"<p><code>readonly</code> style: <code>CSSStyleDeclaration</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.style</code></p>"},{"location":"reference/classes/VizzuPlayer/#tabindex","title":"tabIndex","text":"<p>tabIndex: <code>number</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.tabIndex</code></p>"},{"location":"reference/classes/VizzuPlayer/#tagname","title":"tagName","text":"<p><code>readonly</code> tagName: <code>string</code></p> <p>Returns the HTML-uppercased qualified name.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.tagName</code></p>"},{"location":"reference/classes/VizzuPlayer/#text_node","title":"TEXT_NODE","text":"<p><code>readonly</code> TEXT_NODE: <code>3</code></p> <p>node is a Text node.</p> <p>Inherited from</p> <p><code>HTMLElement.TEXT_NODE</code></p>"},{"location":"reference/classes/VizzuPlayer/#textcontent","title":"textContent","text":"<p>textContent: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.textContent</code></p>"},{"location":"reference/classes/VizzuPlayer/#title","title":"title","text":"<p>title: <code>string</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.title</code></p>"},{"location":"reference/classes/VizzuPlayer/#translate","title":"translate","text":"<p>translate: <code>boolean</code></p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.translate</code></p>"},{"location":"reference/classes/VizzuPlayer/#writingsuggestions","title":"writingSuggestions","text":"<p>writingSuggestions: <code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.writingSuggestions</code></p>"},{"location":"reference/classes/VizzuPlayer/#accessors","title":"Accessors","text":""},{"location":"reference/classes/VizzuPlayer/#slides","title":"slides","text":"<p>Set Signature</p> <p>set slides(<code>slides</code>): <code>void</code></p> <p>Setter for story object.</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#slides_1","title":"slides","text":"<p><code>Story</code></p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/classes/VizzuPlayer/#methods","title":"Methods","text":""},{"location":"reference/classes/VizzuPlayer/#addeventlistener","title":"addEventListener()","text":"<p>Call Signature</p> <p>addEventListener\\&lt;<code>K</code>&gt;(<code>type</code>, <code>listener</code>, <code>options</code>?): <code>void</code></p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementEventMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#type","title":"type","text":"<p><code>K</code></p>"},{"location":"reference/classes/VizzuPlayer/#listener","title":"listener","text":"<p>(<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p>"},{"location":"reference/classes/VizzuPlayer/#options","title":"options?","text":"<p><code>boolean</code> | <code>AddEventListenerOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.addEventListener</code></p> <p>Call Signature</p> <p>addEventListener(<code>type</code>, <code>listener</code>, <code>options</code>?): <code>void</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#type_1","title":"type","text":"<p><code>string</code></p>"},{"location":"reference/classes/VizzuPlayer/#listener_1","title":"listener","text":"<p><code>EventListenerOrEventListenerObject</code></p>"},{"location":"reference/classes/VizzuPlayer/#options_1","title":"options?","text":"<p><code>boolean</code> | <code>AddEventListenerOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.addEventListener</code></p>"},{"location":"reference/classes/VizzuPlayer/#after","title":"after()","text":"<p>after(...<code>nodes</code>): <code>void</code></p> <p>Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>MDN Reference</p> <p>Parameters</p> <p>nodes</p> <p>...(<code>string</code> | <code>Node</code>)[]</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.after</code></p>"},{"location":"reference/classes/VizzuPlayer/#animate","title":"animate()","text":"<p>animate(<code>keyframes</code>, <code>options</code>?): <code>Animation</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>keyframes</p> <p><code>Keyframe</code>[] | <code>PropertyIndexedKeyframes</code></p> <p>options?</p> <p><code>number</code> | <code>KeyframeAnimationOptions</code></p> <p>Returns</p> <p><code>Animation</code></p> <p>Inherited from</p> <p><code>HTMLElement.animate</code></p>"},{"location":"reference/classes/VizzuPlayer/#append","title":"append()","text":"<p>append(...<code>nodes</code>): <code>void</code></p> <p>Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>MDN Reference</p> <p>Parameters</p> <p>nodes</p> <p>...(<code>string</code> | <code>Node</code>)[]</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.append</code></p>"},{"location":"reference/classes/VizzuPlayer/#appendchild","title":"appendChild()","text":"<p>appendChild\\&lt;<code>T</code>&gt;(<code>node</code>): <code>T</code></p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 T extends <code>Node</code></p> <p>Parameters</p> <p>node</p> <p><code>T</code></p> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p><code>HTMLElement.appendChild</code></p>"},{"location":"reference/classes/VizzuPlayer/#attachinternals","title":"attachInternals()","text":"<p>attachInternals(): <code>ElementInternals</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>ElementInternals</code></p> <p>Inherited from</p> <p><code>HTMLElement.attachInternals</code></p>"},{"location":"reference/classes/VizzuPlayer/#attachshadow","title":"attachShadow()","text":"<p>attachShadow(<code>init</code>): <code>ShadowRoot</code></p> <p>Creates a shadow root for element and returns it.</p> <p>MDN Reference</p> <p>Parameters</p> <p>init</p> <p><code>ShadowRootInit</code></p> <p>Returns</p> <p><code>ShadowRoot</code></p> <p>Inherited from</p> <p><code>HTMLElement.attachShadow</code></p>"},{"location":"reference/classes/VizzuPlayer/#before","title":"before()","text":"<p>before(...<code>nodes</code>): <code>void</code></p> <p>Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>MDN Reference</p> <p>Parameters</p> <p>nodes</p> <p>...(<code>string</code> | <code>Node</code>)[]</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.before</code></p>"},{"location":"reference/classes/VizzuPlayer/#blur","title":"blur()","text":"<p>blur(): <code>void</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.blur</code></p>"},{"location":"reference/classes/VizzuPlayer/#checkvisibility","title":"checkVisibility()","text":"<p>checkVisibility(<code>options</code>?): <code>boolean</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>options?</p> <p><code>CheckVisibilityOptions</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.checkVisibility</code></p>"},{"location":"reference/classes/VizzuPlayer/#click","title":"click()","text":"<p>click(): <code>void</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.click</code></p>"},{"location":"reference/classes/VizzuPlayer/#clonenode","title":"cloneNode()","text":"<p>cloneNode(<code>deep</code>?): <code>Node</code></p> <p>Returns a copy of node. If deep is true, the copy also includes the node's descendants.</p> <p>MDN Reference</p> <p>Parameters</p> <p>deep?</p> <p><code>boolean</code></p> <p>Returns</p> <p><code>Node</code></p> <p>Inherited from</p> <p><code>HTMLElement.cloneNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#closest","title":"closest()","text":"<p>Call Signature</p> <p>closest\\&lt;<code>K</code>&gt;(<code>selector</code>): <code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.</p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selector","title":"selector","text":"<p><code>K</code></p> <p>Returns</p> <p><code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p><code>HTMLElement.closest</code></p> <p>Call Signature</p> <p>closest\\&lt;<code>K</code>&gt;(<code>selector</code>): <code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>SVGElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selector_1","title":"selector","text":"<p><code>K</code></p> <p>Returns</p> <p><code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p><code>HTMLElement.closest</code></p> <p>Call Signature</p> <p>closest\\&lt;<code>K</code>&gt;(<code>selector</code>): <code>MathMLElementTagNameMap</code>[<code>K</code>]</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>MathMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selector_2","title":"selector","text":"<p><code>K</code></p> <p>Returns</p> <p><code>MathMLElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p><code>HTMLElement.closest</code></p> <p>Call Signature</p> <p>closest\\&lt;<code>E</code>&gt;(<code>selectors</code>): <code>E</code></p> <p>Type Parameters</p> <p>\u2022 E extends <code>Element</code> = <code>Element</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors","title":"selectors","text":"<p><code>string</code></p> <p>Returns</p> <p><code>E</code></p> <p>Inherited from</p> <p><code>HTMLElement.closest</code></p>"},{"location":"reference/classes/VizzuPlayer/#comparedocumentposition","title":"compareDocumentPosition()","text":"<p>compareDocumentPosition(<code>other</code>): <code>number</code></p> <p>Returns a bitmask indicating the position of other relative to node.</p> <p>MDN Reference</p> <p>Parameters</p> <p>other</p> <p><code>Node</code></p> <p>Returns</p> <p><code>number</code></p> <p>Inherited from</p> <p><code>HTMLElement.compareDocumentPosition</code></p>"},{"location":"reference/classes/VizzuPlayer/#computedstylemap","title":"computedStyleMap()","text":"<p>computedStyleMap(): <code>StylePropertyMapReadOnly</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>StylePropertyMapReadOnly</code></p> <p>Inherited from</p> <p><code>HTMLElement.computedStyleMap</code></p>"},{"location":"reference/classes/VizzuPlayer/#contains","title":"contains()","text":"<p>contains(<code>other</code>): <code>boolean</code></p> <p>Returns true if other is an inclusive descendant of node, and false otherwise.</p> <p>MDN Reference</p> <p>Parameters</p> <p>other</p> <p><code>Node</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.contains</code></p>"},{"location":"reference/classes/VizzuPlayer/#dispatchevent","title":"dispatchEvent()","text":"<p>dispatchEvent(<code>event</code>): <code>boolean</code></p> <p>Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.</p> <p>MDN Reference</p> <p>Parameters</p> <p>event</p> <p><code>Event</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.dispatchEvent</code></p>"},{"location":"reference/classes/VizzuPlayer/#focus","title":"focus()","text":"<p>focus(<code>options</code>?): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>options?</p> <p><code>FocusOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.focus</code></p>"},{"location":"reference/classes/VizzuPlayer/#getanimations","title":"getAnimations()","text":"<p>getAnimations(<code>options</code>?): <code>Animation</code>[]</p> <p>MDN Reference</p> <p>Parameters</p> <p>options?</p> <p><code>GetAnimationsOptions</code></p> <p>Returns</p> <p><code>Animation</code>[]</p> <p>Inherited from</p> <p><code>HTMLElement.getAnimations</code></p>"},{"location":"reference/classes/VizzuPlayer/#getattribute","title":"getAttribute()","text":"<p>getAttribute(<code>qualifiedName</code>): <code>string</code></p> <p>Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.</p> <p>MDN Reference</p> <p>Parameters</p> <p>qualifiedName</p> <p><code>string</code></p> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.getAttribute</code></p>"},{"location":"reference/classes/VizzuPlayer/#getattributenames","title":"getAttributeNames()","text":"<p>getAttributeNames(): <code>string</code>[]</p> <p>Returns the qualified names of all element's attributes. Can contain duplicates.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>string</code>[]</p> <p>Inherited from</p> <p><code>HTMLElement.getAttributeNames</code></p>"},{"location":"reference/classes/VizzuPlayer/#getattributenode","title":"getAttributeNode()","text":"<p>getAttributeNode(<code>qualifiedName</code>): <code>Attr</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>qualifiedName</p> <p><code>string</code></p> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p><code>HTMLElement.getAttributeNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#getattributenodens","title":"getAttributeNodeNS()","text":"<p>getAttributeNodeNS(<code>namespace</code>, <code>localName</code>): <code>Attr</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>namespace</p> <p><code>string</code></p> <p>localName</p> <p><code>string</code></p> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p><code>HTMLElement.getAttributeNodeNS</code></p>"},{"location":"reference/classes/VizzuPlayer/#getattributens","title":"getAttributeNS()","text":"<p>getAttributeNS(<code>namespace</code>, <code>localName</code>): <code>string</code></p> <p>Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.</p> <p>MDN Reference</p> <p>Parameters</p> <p>namespace</p> <p><code>string</code></p> <p>localName</p> <p><code>string</code></p> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.getAttributeNS</code></p>"},{"location":"reference/classes/VizzuPlayer/#getboundingclientrect","title":"getBoundingClientRect()","text":"<p>getBoundingClientRect(): <code>DOMRect</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>DOMRect</code></p> <p>Inherited from</p> <p><code>HTMLElement.getBoundingClientRect</code></p>"},{"location":"reference/classes/VizzuPlayer/#getclientrects","title":"getClientRects()","text":"<p>getClientRects(): <code>DOMRectList</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>DOMRectList</code></p> <p>Inherited from</p> <p><code>HTMLElement.getClientRects</code></p>"},{"location":"reference/classes/VizzuPlayer/#getelementsbyclassname","title":"getElementsByClassName()","text":"<p>getElementsByClassName(<code>classNames</code>): <code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.</p> <p>MDN Reference</p> <p>Parameters</p> <p>classNames</p> <p><code>string</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByClassName</code></p>"},{"location":"reference/classes/VizzuPlayer/#getelementsbytagname","title":"getElementsByTagName()","text":"<p>Call Signature</p> <p>getElementsByTagName\\&lt;<code>K</code>&gt;(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#qualifiedname","title":"qualifiedName","text":"<p><code>K</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagName</code></p> <p>Call Signature</p> <p>getElementsByTagName\\&lt;<code>K</code>&gt;(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>SVGElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#qualifiedname_1","title":"qualifiedName","text":"<p><code>K</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagName</code></p> <p>Call Signature</p> <p>getElementsByTagName\\&lt;<code>K</code>&gt;(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>MathMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>MathMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#qualifiedname_2","title":"qualifiedName","text":"<p><code>K</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>MathMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagName</code></p> <p>Call Signature</p> <p>getElementsByTagName\\&lt;<code>K</code>&gt;(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>HTMLElementDeprecatedTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementDeprecatedTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#qualifiedname_3","title":"qualifiedName","text":"<p><code>K</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>HTMLElementDeprecatedTagNameMap</code>[<code>K</code>]&gt;</p> <p>Deprecated</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagName</code></p> <p>Call Signature</p> <p>getElementsByTagName(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#qualifiedname_4","title":"qualifiedName","text":"<p><code>string</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagName</code></p>"},{"location":"reference/classes/VizzuPlayer/#getelementsbytagnamens","title":"getElementsByTagNameNS()","text":"<p>Call Signature</p> <p>getElementsByTagNameNS(<code>namespaceURI</code>, <code>localName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>HTMLElement</code>&gt;</p> <p>MDN Reference</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#namespaceuri_1","title":"namespaceURI","text":"<p><code>\"http://www.w3.org/1999/xhtml\"</code></p>"},{"location":"reference/classes/VizzuPlayer/#localname_1","title":"localName","text":"<p><code>string</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>HTMLElement</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagNameNS</code></p> <p>Call Signature</p> <p>getElementsByTagNameNS(<code>namespaceURI</code>, <code>localName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>SVGElement</code>&gt;</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#namespaceuri_2","title":"namespaceURI","text":"<p><code>\"http://www.w3.org/2000/svg\"</code></p>"},{"location":"reference/classes/VizzuPlayer/#localname_2","title":"localName","text":"<p><code>string</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>SVGElement</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagNameNS</code></p> <p>Call Signature</p> <p>getElementsByTagNameNS(<code>namespaceURI</code>, <code>localName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>MathMLElement</code>&gt;</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#namespaceuri_3","title":"namespaceURI","text":"<p><code>\"http://www.w3.org/1998/Math/MathML\"</code></p>"},{"location":"reference/classes/VizzuPlayer/#localname_3","title":"localName","text":"<p><code>string</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>MathMLElement</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagNameNS</code></p> <p>Call Signature</p> <p>getElementsByTagNameNS(<code>namespace</code>, <code>localName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#namespace","title":"namespace","text":"<p><code>string</code></p>"},{"location":"reference/classes/VizzuPlayer/#localname_4","title":"localName","text":"<p><code>string</code></p> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.getElementsByTagNameNS</code></p>"},{"location":"reference/classes/VizzuPlayer/#gethtml","title":"getHTML()","text":"<p>getHTML(<code>options</code>?): <code>string</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>options?</p> <p><code>GetHTMLOptions</code></p> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.getHTML</code></p>"},{"location":"reference/classes/VizzuPlayer/#getrootnode","title":"getRootNode()","text":"<p>getRootNode(<code>options</code>?): <code>Node</code></p> <p>Returns node's root.</p> <p>MDN Reference</p> <p>Parameters</p> <p>options?</p> <p><code>GetRootNodeOptions</code></p> <p>Returns</p> <p><code>Node</code></p> <p>Inherited from</p> <p><code>HTMLElement.getRootNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#hasattribute","title":"hasAttribute()","text":"<p>hasAttribute(<code>qualifiedName</code>): <code>boolean</code></p> <p>Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.</p> <p>MDN Reference</p> <p>Parameters</p> <p>qualifiedName</p> <p><code>string</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.hasAttribute</code></p>"},{"location":"reference/classes/VizzuPlayer/#hasattributens","title":"hasAttributeNS()","text":"<p>hasAttributeNS(<code>namespace</code>, <code>localName</code>): <code>boolean</code></p> <p>Returns true if element has an attribute whose namespace is namespace and local name is localName.</p> <p>MDN Reference</p> <p>Parameters</p> <p>namespace</p> <p><code>string</code></p> <p>localName</p> <p><code>string</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.hasAttributeNS</code></p>"},{"location":"reference/classes/VizzuPlayer/#hasattributes","title":"hasAttributes()","text":"<p>hasAttributes(): <code>boolean</code></p> <p>Returns true if element has attributes, and false otherwise.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.hasAttributes</code></p>"},{"location":"reference/classes/VizzuPlayer/#haschildnodes","title":"hasChildNodes()","text":"<p>hasChildNodes(): <code>boolean</code></p> <p>Returns whether node has children.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.hasChildNodes</code></p>"},{"location":"reference/classes/VizzuPlayer/#haspointercapture","title":"hasPointerCapture()","text":"<p>hasPointerCapture(<code>pointerId</code>): <code>boolean</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>pointerId</p> <p><code>number</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.hasPointerCapture</code></p>"},{"location":"reference/classes/VizzuPlayer/#hidepopover","title":"hidePopover()","text":"<p>hidePopover(): <code>void</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.hidePopover</code></p>"},{"location":"reference/classes/VizzuPlayer/#insertadjacentelement","title":"insertAdjacentElement()","text":"<p>insertAdjacentElement(<code>where</code>, <code>element</code>): <code>Element</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>where</p> <p><code>InsertPosition</code></p> <p>element</p> <p><code>Element</code></p> <p>Returns</p> <p><code>Element</code></p> <p>Inherited from</p> <p><code>HTMLElement.insertAdjacentElement</code></p>"},{"location":"reference/classes/VizzuPlayer/#insertadjacenthtml","title":"insertAdjacentHTML()","text":"<p>insertAdjacentHTML(<code>position</code>, <code>string</code>): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>position</p> <p><code>InsertPosition</code></p> <p>string</p> <p><code>string</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.insertAdjacentHTML</code></p>"},{"location":"reference/classes/VizzuPlayer/#insertadjacenttext","title":"insertAdjacentText()","text":"<p>insertAdjacentText(<code>where</code>, <code>data</code>): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>where</p> <p><code>InsertPosition</code></p> <p>data</p> <p><code>string</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.insertAdjacentText</code></p>"},{"location":"reference/classes/VizzuPlayer/#insertbefore","title":"insertBefore()","text":"<p>insertBefore\\&lt;<code>T</code>&gt;(<code>node</code>, <code>child</code>): <code>T</code></p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 T extends <code>Node</code></p> <p>Parameters</p> <p>node</p> <p><code>T</code></p> <p>child</p> <p><code>Node</code></p> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p><code>HTMLElement.insertBefore</code></p>"},{"location":"reference/classes/VizzuPlayer/#isdefaultnamespace","title":"isDefaultNamespace()","text":"<p>isDefaultNamespace(<code>namespace</code>): <code>boolean</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>namespace</p> <p><code>string</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.isDefaultNamespace</code></p>"},{"location":"reference/classes/VizzuPlayer/#isequalnode","title":"isEqualNode()","text":"<p>isEqualNode(<code>otherNode</code>): <code>boolean</code></p> <p>Returns whether node and otherNode have the same properties.</p> <p>MDN Reference</p> <p>Parameters</p> <p>otherNode</p> <p><code>Node</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.isEqualNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#issamenode","title":"isSameNode()","text":"<p>isSameNode(<code>otherNode</code>): <code>boolean</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>otherNode</p> <p><code>Node</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.isSameNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#lookupnamespaceuri","title":"lookupNamespaceURI()","text":"<p>lookupNamespaceURI(<code>prefix</code>): <code>string</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>prefix</p> <p><code>string</code></p> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.lookupNamespaceURI</code></p>"},{"location":"reference/classes/VizzuPlayer/#lookupprefix","title":"lookupPrefix()","text":"<p>lookupPrefix(<code>namespace</code>): <code>string</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>namespace</p> <p><code>string</code></p> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p><code>HTMLElement.lookupPrefix</code></p>"},{"location":"reference/classes/VizzuPlayer/#matches","title":"matches()","text":"<p>matches(<code>selectors</code>): <code>boolean</code></p> <p>Returns true if matching selectors against element's root yields element, and false otherwise.</p> <p>MDN Reference</p> <p>Parameters</p> <p>selectors</p> <p><code>string</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.matches</code></p>"},{"location":"reference/classes/VizzuPlayer/#normalize","title":"normalize()","text":"<p>normalize(): <code>void</code></p> <p>Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.normalize</code></p>"},{"location":"reference/classes/VizzuPlayer/#prepend","title":"prepend()","text":"<p>prepend(...<code>nodes</code>): <code>void</code></p> <p>Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>MDN Reference</p> <p>Parameters</p> <p>nodes</p> <p>...(<code>string</code> | <code>Node</code>)[]</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.prepend</code></p>"},{"location":"reference/classes/VizzuPlayer/#queryselector","title":"querySelector()","text":"<p>Call Signature</p> <p>querySelector\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Returns the first element that is a descendant of node that matches selectors.</p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_1","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p><code>HTMLElement.querySelector</code></p> <p>Call Signature</p> <p>querySelector\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>SVGElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_2","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p><code>HTMLElement.querySelector</code></p> <p>Call Signature</p> <p>querySelector\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>MathMLElementTagNameMap</code>[<code>K</code>]</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>MathMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_3","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>MathMLElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p><code>HTMLElement.querySelector</code></p> <p>Call Signature</p> <p>querySelector\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>HTMLElementDeprecatedTagNameMap</code>[<code>K</code>]</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementDeprecatedTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_4","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>HTMLElementDeprecatedTagNameMap</code>[<code>K</code>]</p> <p>Deprecated</p> <p>Inherited from</p> <p><code>HTMLElement.querySelector</code></p> <p>Call Signature</p> <p>querySelector\\&lt;<code>E</code>&gt;(<code>selectors</code>): <code>E</code></p> <p>Type Parameters</p> <p>\u2022 E extends <code>Element</code> = <code>Element</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_5","title":"selectors","text":"<p><code>string</code></p> <p>Returns</p> <p><code>E</code></p> <p>Inherited from</p> <p><code>HTMLElement.querySelector</code></p>"},{"location":"reference/classes/VizzuPlayer/#queryselectorall","title":"querySelectorAll()","text":"<p>Call Signature</p> <p>querySelectorAll\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Returns all element descendants of node that match selectors.</p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_6","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.querySelectorAll</code></p> <p>Call Signature</p> <p>querySelectorAll\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>SVGElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_7","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.querySelectorAll</code></p> <p>Call Signature</p> <p>querySelectorAll\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>MathMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>MathMLElementTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_8","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>MathMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.querySelectorAll</code></p> <p>Call Signature</p> <p>querySelectorAll\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>HTMLElementDeprecatedTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementDeprecatedTagNameMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_9","title":"selectors","text":"<p><code>K</code></p> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>HTMLElementDeprecatedTagNameMap</code>[<code>K</code>]&gt;</p> <p>Deprecated</p> <p>Inherited from</p> <p><code>HTMLElement.querySelectorAll</code></p> <p>Call Signature</p> <p>querySelectorAll\\&lt;<code>E</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>E</code>&gt;</p> <p>Type Parameters</p> <p>\u2022 E extends <code>Element</code> = <code>Element</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#selectors_10","title":"selectors","text":"<p><code>string</code></p> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>E</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.querySelectorAll</code></p>"},{"location":"reference/classes/VizzuPlayer/#releasepointercapture","title":"releasePointerCapture()","text":"<p>releasePointerCapture(<code>pointerId</code>): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>pointerId</p> <p><code>number</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.releasePointerCapture</code></p>"},{"location":"reference/classes/VizzuPlayer/#remove","title":"remove()","text":"<p>remove(): <code>void</code></p> <p>Removes node.</p> <p>MDN Reference</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.remove</code></p>"},{"location":"reference/classes/VizzuPlayer/#removeattribute","title":"removeAttribute()","text":"<p>removeAttribute(<code>qualifiedName</code>): <code>void</code></p> <p>Removes element's first attribute whose qualified name is qualifiedName.</p> <p>MDN Reference</p> <p>Parameters</p> <p>qualifiedName</p> <p><code>string</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.removeAttribute</code></p>"},{"location":"reference/classes/VizzuPlayer/#removeattributenode","title":"removeAttributeNode()","text":"<p>removeAttributeNode(<code>attr</code>): <code>Attr</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>attr</p> <p><code>Attr</code></p> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p><code>HTMLElement.removeAttributeNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#removeattributens","title":"removeAttributeNS()","text":"<p>removeAttributeNS(<code>namespace</code>, <code>localName</code>): <code>void</code></p> <p>Removes element's attribute whose namespace is namespace and local name is localName.</p> <p>MDN Reference</p> <p>Parameters</p> <p>namespace</p> <p><code>string</code></p> <p>localName</p> <p><code>string</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.removeAttributeNS</code></p>"},{"location":"reference/classes/VizzuPlayer/#removechild","title":"removeChild()","text":"<p>removeChild\\&lt;<code>T</code>&gt;(<code>child</code>): <code>T</code></p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 T extends <code>Node</code></p> <p>Parameters</p> <p>child</p> <p><code>T</code></p> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p><code>HTMLElement.removeChild</code></p>"},{"location":"reference/classes/VizzuPlayer/#removeeventlistener","title":"removeEventListener()","text":"<p>Call Signature</p> <p>removeEventListener\\&lt;<code>K</code>&gt;(<code>type</code>, <code>listener</code>, <code>options</code>?): <code>void</code></p> <p>Type Parameters</p> <p>\u2022 K extends keyof <code>HTMLElementEventMap</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#type_2","title":"type","text":"<p><code>K</code></p>"},{"location":"reference/classes/VizzuPlayer/#listener_2","title":"listener","text":"<p>(<code>this</code>, <code>ev</code>) =&gt; <code>any</code></p>"},{"location":"reference/classes/VizzuPlayer/#options_2","title":"options?","text":"<p><code>boolean</code> | <code>EventListenerOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.removeEventListener</code></p> <p>Call Signature</p> <p>removeEventListener(<code>type</code>, <code>listener</code>, <code>options</code>?): <code>void</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#type_3","title":"type","text":"<p><code>string</code></p>"},{"location":"reference/classes/VizzuPlayer/#listener_3","title":"listener","text":"<p><code>EventListenerOrEventListenerObject</code></p>"},{"location":"reference/classes/VizzuPlayer/#options_3","title":"options?","text":"<p><code>boolean</code> | <code>EventListenerOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.removeEventListener</code></p>"},{"location":"reference/classes/VizzuPlayer/#replacechild","title":"replaceChild()","text":"<p>replaceChild\\&lt;<code>T</code>&gt;(<code>node</code>, <code>child</code>): <code>T</code></p> <p>MDN Reference</p> <p>Type Parameters</p> <p>\u2022 T extends <code>Node</code></p> <p>Parameters</p> <p>node</p> <p><code>Node</code></p> <p>child</p> <p><code>T</code></p> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p><code>HTMLElement.replaceChild</code></p>"},{"location":"reference/classes/VizzuPlayer/#replacechildren","title":"replaceChildren()","text":"<p>replaceChildren(...<code>nodes</code>): <code>void</code></p> <p>Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>MDN Reference</p> <p>Parameters</p> <p>nodes</p> <p>...(<code>string</code> | <code>Node</code>)[]</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.replaceChildren</code></p>"},{"location":"reference/classes/VizzuPlayer/#replacewith","title":"replaceWith()","text":"<p>replaceWith(...<code>nodes</code>): <code>void</code></p> <p>Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>MDN Reference</p> <p>Parameters</p> <p>nodes</p> <p>...(<code>string</code> | <code>Node</code>)[]</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.replaceWith</code></p>"},{"location":"reference/classes/VizzuPlayer/#requestfullscreen","title":"requestFullscreen()","text":"<p>requestFullscreen(<code>options</code>?): <code>Promise</code>\\&lt;<code>void</code>&gt;</p> <p>Displays element fullscreen and resolves promise when done.</p> <p>When supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.</p> <p>MDN Reference</p> <p>Parameters</p> <p>options?</p> <p><code>FullscreenOptions</code></p> <p>Returns</p> <p><code>Promise</code>\\&lt;<code>void</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.requestFullscreen</code></p>"},{"location":"reference/classes/VizzuPlayer/#requestpointerlock","title":"requestPointerLock()","text":"<p>requestPointerLock(<code>options</code>?): <code>Promise</code>\\&lt;<code>void</code>&gt;</p> <p>MDN Reference</p> <p>Parameters</p> <p>options?</p> <p><code>PointerLockOptions</code></p> <p>Returns</p> <p><code>Promise</code>\\&lt;<code>void</code>&gt;</p> <p>Inherited from</p> <p><code>HTMLElement.requestPointerLock</code></p>"},{"location":"reference/classes/VizzuPlayer/#scroll","title":"scroll()","text":"<p>Call Signature</p> <p>scroll(<code>options</code>?): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#options_4","title":"options?","text":"<p><code>ScrollToOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.scroll</code></p> <p>Call Signature</p> <p>scroll(<code>x</code>, <code>y</code>): <code>void</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#x","title":"x","text":"<p><code>number</code></p>"},{"location":"reference/classes/VizzuPlayer/#y","title":"y","text":"<p><code>number</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.scroll</code></p>"},{"location":"reference/classes/VizzuPlayer/#scrollby","title":"scrollBy()","text":"<p>Call Signature</p> <p>scrollBy(<code>options</code>?): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#options_5","title":"options?","text":"<p><code>ScrollToOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.scrollBy</code></p> <p>Call Signature</p> <p>scrollBy(<code>x</code>, <code>y</code>): <code>void</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#x_1","title":"x","text":"<p><code>number</code></p>"},{"location":"reference/classes/VizzuPlayer/#y_1","title":"y","text":"<p><code>number</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.scrollBy</code></p>"},{"location":"reference/classes/VizzuPlayer/#scrollintoview","title":"scrollIntoView()","text":"<p>scrollIntoView(<code>arg</code>?): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>arg?</p> <p><code>boolean</code> | <code>ScrollIntoViewOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.scrollIntoView</code></p>"},{"location":"reference/classes/VizzuPlayer/#scrollto","title":"scrollTo()","text":"<p>Call Signature</p> <p>scrollTo(<code>options</code>?): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#options_6","title":"options?","text":"<p><code>ScrollToOptions</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.scrollTo</code></p> <p>Call Signature</p> <p>scrollTo(<code>x</code>, <code>y</code>): <code>void</code></p> <p>Parameters</p>"},{"location":"reference/classes/VizzuPlayer/#x_2","title":"x","text":"<p><code>number</code></p>"},{"location":"reference/classes/VizzuPlayer/#y_2","title":"y","text":"<p><code>number</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.scrollTo</code></p>"},{"location":"reference/classes/VizzuPlayer/#setattribute","title":"setAttribute()","text":"<p>setAttribute(<code>qualifiedName</code>, <code>value</code>): <code>void</code></p> <p>Sets the value of element's first attribute whose qualified name is qualifiedName to value.</p> <p>MDN Reference</p> <p>Parameters</p> <p>qualifiedName</p> <p><code>string</code></p> <p>value</p> <p><code>string</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.setAttribute</code></p>"},{"location":"reference/classes/VizzuPlayer/#setattributenode","title":"setAttributeNode()","text":"<p>setAttributeNode(<code>attr</code>): <code>Attr</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>attr</p> <p><code>Attr</code></p> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p><code>HTMLElement.setAttributeNode</code></p>"},{"location":"reference/classes/VizzuPlayer/#setattributenodens","title":"setAttributeNodeNS()","text":"<p>setAttributeNodeNS(<code>attr</code>): <code>Attr</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>attr</p> <p><code>Attr</code></p> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p><code>HTMLElement.setAttributeNodeNS</code></p>"},{"location":"reference/classes/VizzuPlayer/#setattributens","title":"setAttributeNS()","text":"<p>setAttributeNS(<code>namespace</code>, <code>qualifiedName</code>, <code>value</code>): <code>void</code></p> <p>Sets the value of element's attribute whose namespace is namespace and local name is localName to value.</p> <p>MDN Reference</p> <p>Parameters</p> <p>namespace</p> <p><code>string</code></p> <p>qualifiedName</p> <p><code>string</code></p> <p>value</p> <p><code>string</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.setAttributeNS</code></p>"},{"location":"reference/classes/VizzuPlayer/#sethtmlunsafe","title":"setHTMLUnsafe()","text":"<p>setHTMLUnsafe(<code>html</code>): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>html</p> <p><code>string</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.setHTMLUnsafe</code></p>"},{"location":"reference/classes/VizzuPlayer/#setpointercapture","title":"setPointerCapture()","text":"<p>setPointerCapture(<code>pointerId</code>): <code>void</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>pointerId</p> <p><code>number</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.setPointerCapture</code></p>"},{"location":"reference/classes/VizzuPlayer/#showpopover","title":"showPopover()","text":"<p>showPopover(): <code>void</code></p> <p>MDN Reference</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p><code>HTMLElement.showPopover</code></p>"},{"location":"reference/classes/VizzuPlayer/#toggleattribute","title":"toggleAttribute()","text":"<p>toggleAttribute(<code>qualifiedName</code>, <code>force</code>?): <code>boolean</code></p> <p>If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.</p> <p>Returns true if qualifiedName is now present, and false otherwise.</p> <p>MDN Reference</p> <p>Parameters</p> <p>qualifiedName</p> <p><code>string</code></p> <p>force?</p> <p><code>boolean</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.toggleAttribute</code></p>"},{"location":"reference/classes/VizzuPlayer/#togglepopover","title":"togglePopover()","text":"<p>togglePopover(<code>force</code>?): <code>boolean</code></p> <p>MDN Reference</p> <p>Parameters</p> <p>force?</p> <p><code>boolean</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p><code>HTMLElement.togglePopover</code></p>"},{"location":"reference/classes/VizzuPlayer/#webkitmatchesselector","title":"~~webkitMatchesSelector()~~","text":"<p>webkitMatchesSelector(<code>selectors</code>): <code>boolean</code></p> <p>Parameters</p> <p>selectors</p> <p><code>string</code></p> <p>Returns</p> <p><code>boolean</code></p> <p>Deprecated</p> <p>This is a legacy alias of <code>matches</code>.</p> <p>MDN Reference</p> <p>Inherited from</p> <p><code>HTMLElement.webkitMatchesSelector</code></p>"},{"location":"reference/interfaces/Phase/","title":"Phase","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Phase</p>"},{"location":"reference/interfaces/Phase/#interface-phase","title":"Interface: Phase","text":"<p>Atomic phase of a slide coressponding to one Vizzu.animate() call.</p>"},{"location":"reference/interfaces/Phase/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Phase/#animoptions","title":"animOptions?","text":"<p><code>optional</code> animOptions: <code>Options</code></p>"},{"location":"reference/interfaces/Phase/#config","title":"config?","text":"<p><code>optional</code> config: <code>Chart</code></p>"},{"location":"reference/interfaces/Phase/#filter","title":"filter?","text":"<p><code>optional</code> filter: <code>FilterCallback</code></p>"},{"location":"reference/interfaces/Phase/#style","title":"style?","text":"<p><code>optional</code> style: <code>Chart</code></p>"},{"location":"reference/interfaces/Story/","title":"Story","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Story</p>"},{"location":"reference/interfaces/Story/#interface-story","title":"Interface: Story","text":"<p>Story configuration object represents the whole presentation containing the underlying data and the slides.</p>"},{"location":"reference/interfaces/Story/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Story/#data","title":"data?","text":"<p><code>optional</code> data: <code>Set</code></p> <p>Data, copied into the initializer slide (if not present).</p>"},{"location":"reference/interfaces/Story/#slides","title":"slides","text":"<p>slides: <code>Slide</code>[]</p> <p>The sequence of the presentation's slides.</p>"},{"location":"reference/interfaces/Story/#style","title":"style?","text":"<p><code>optional</code> style: <code>Chart</code></p> <p>Initial style, copied into the initializer slide (if not present).</p>"},{"location":"reference/namespaces/Vizzu/","title":"Index","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu</p>"},{"location":"reference/namespaces/Vizzu/#vizzu","title":"Vizzu","text":""},{"location":"reference/namespaces/Vizzu/#namespaces","title":"Namespaces","text":"<ul> <li>Anim</li> <li>Config</li> <li>Data</li> <li>Styles</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/","title":"Index","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/#anim","title":"Anim","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Anim/#interfaces","title":"Interfaces","text":"<ul> <li>ControlOptions</li> <li>GroupOptions</li> <li>Keyframe</li> <li>Options</li> <li>Target</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/#type-aliases","title":"Type Aliases","text":"<ul> <li>AnimTarget</li> <li>Duration</li> <li>Easing</li> <li>Keyframes</li> <li>Position</li> <li>RegroupStrategy</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/ControlOptions/","title":"ControlOptions","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / ControlOptions</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/ControlOptions/#interface-controloptions","title":"Interface: ControlOptions","text":"<p>Animation playback related oprtions.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/ControlOptions/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/ControlOptions/#direction","title":"direction?","text":"<p><code>optional</code> direction: <code>\"normal\"</code> | <code>\"reverse\"</code></p> <p>Play direction of the animation.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/ControlOptions/#playstate","title":"playState?","text":"<p><code>optional</code> playState: <code>\"paused\"</code> | <code>\"running\"</code></p> <p>Determines if the animation should start automatically after the animate() call.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/ControlOptions/#position","title":"position?","text":"<p><code>optional</code> position: <code>number</code></p> <p>The starting position of the animation.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/ControlOptions/#speed","title":"speed?","text":"<p><code>optional</code> speed: <code>number</code></p> <p>Playback speed of the animation. It is 1.0 by default. Negative values are considered 0.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/GroupOptions/","title":"GroupOptions","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / GroupOptions</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/GroupOptions/#interface-groupoptions","title":"Interface: GroupOptions","text":"<p>Animation parameters for an animation group.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/GroupOptions/#extended-by","title":"Extended by","text":"<ul> <li><code>Options</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/GroupOptions/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/GroupOptions/#delay","title":"delay?","text":"<p><code>optional</code> delay: <code>Duration</code></p> <p>Waiting time interval before the animation starts.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/GroupOptions/#duration","title":"duration?","text":"<p><code>optional</code> duration: <code>Duration</code></p> <p>The length of time an animation should take to complete.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/GroupOptions/#easing","title":"easing?","text":"<p><code>optional</code> easing: <code>Easing</code></p> <p>Sets the easing used for the animation.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Keyframe/","title":"Keyframe","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / Keyframe</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Keyframe/#interface-keyframe","title":"Interface: Keyframe","text":"<p>Object for describing a single animation target chart state and the options of the animation to this chart state.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Keyframe/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Keyframe/#options","title":"options?","text":"<p><code>optional</code> options: <code>Options</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Keyframe/#target","title":"target","text":"<p>target: <code>Target</code> | <code>Snapshot</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/","title":"Options","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / Options</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#interface-options","title":"Interface: Options","text":"<p>If no animation settings are passed to Vizzu, it will use an automatic setting depending on the actual configuration of the chart. This behavior can be overridden via the animation setting parameter.</p> <p>The animation between two states of the chart can require the transitioning of several different chart properties. These properties are grouped into separately configurable animation groups.</p> <p>The parameters can also be set for the animation as a whole. These settings rescale the durations and delays of the animation groups to the specified total delay and duration.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#extends","title":"Extends","text":"<ul> <li><code>GroupOptions</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#caption","title":"caption?","text":"<p><code>optional</code> caption: <code>GroupOptions</code></p> <p>Caption animation parameters.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#color","title":"color?","text":"<p><code>optional</code> color: <code>GroupOptions</code></p> <p>Marker color animation group.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#connection","title":"connection?","text":"<p><code>optional</code> connection: <code>GroupOptions</code></p> <p>Animation group for area/line rewiring transitions.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#coordsystem","title":"coordSystem?","text":"<p><code>optional</code> coordSystem: <code>GroupOptions</code></p> <p>Coordinate system transformations animation group.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#delay","title":"delay?","text":"<p><code>optional</code> delay: <code>Duration</code></p> <p>Waiting time interval before the animation starts.</p> <p>Inherited from</p> <p><code>GroupOptions</code>.<code>delay</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#duration","title":"duration?","text":"<p><code>optional</code> duration: <code>Duration</code></p> <p>The length of time an animation should take to complete.</p> <p>Inherited from</p> <p><code>GroupOptions</code>.<code>duration</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#easing","title":"easing?","text":"<p><code>optional</code> easing: <code>Easing</code></p> <p>Sets the easing used for the animation.</p> <p>Inherited from</p> <p><code>GroupOptions</code>.<code>easing</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#geometry","title":"geometry?","text":"<p><code>optional</code> geometry: <code>GroupOptions</code></p> <p>Marker geometry morph animation group.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#hide","title":"hide?","text":"<p><code>optional</code> hide: <code>GroupOptions</code></p> <p>Animation group for markers fading out (due to filtering or added/removed data series).</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#legend","title":"legend?","text":"<p><code>optional</code> legend: <code>GroupOptions</code></p> <p>Legend animation parameters.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#regroupstrategy","title":"regroupStrategy?","text":"<p><code>optional</code> regroupStrategy: <code>RegroupStrategy</code></p> <p>Selects the algorithm for transition in case of data grouped differently on the source and target chart.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#show","title":"show?","text":"<p><code>optional</code> show: <code>GroupOptions</code></p> <p>Animation group for new markers fading in (due to filtering or added/removed data series).</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#style","title":"style?","text":"<p><code>optional</code> style: <code>GroupOptions</code></p> <p>Animation group for style parameters.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#subtitle","title":"subtitle?","text":"<p><code>optional</code> subtitle: <code>GroupOptions</code></p> <p>Subtitle animation parameters.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#title","title":"title?","text":"<p><code>optional</code> title: <code>GroupOptions</code></p> <p>Title animation parameters.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#tooltip","title":"tooltip?","text":"<p><code>optional</code> tooltip: <code>GroupOptions</code></p> <p>Animation group for tooltip transitions.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#x","title":"x?","text":"<p><code>optional</code> x: <code>GroupOptions</code></p> <p>Animation group for marker transitions in the direction of the x-axis.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Options/#y","title":"y?","text":"<p><code>optional</code> y: <code>GroupOptions</code></p> <p>Animation group for marker transitions in the direction of the y-axis.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Target/","title":"Target","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / Target</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Target/#interface-target","title":"Interface: Target","text":"<p>Represents a state in the animation describing the data, the chart, and the style parameters to be changed from the actual state. Passing null as style will reset every style parameter to default.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Target/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Target/#config","title":"config?","text":"<p><code>optional</code> config: <code>Chart</code></p> <p>Chart configuration changes.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Target/#data","title":"data?","text":"<p><code>optional</code> data: <code>Set</code></p> <p>Data set.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/interfaces/Target/#style","title":"style?","text":"<p><code>optional</code> style: <code>Chart</code></p> <p>Style changes.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/AnimTarget/","title":"AnimTarget","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / AnimTarget</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/AnimTarget/#type-alias-animtarget","title":"Type Alias: AnimTarget","text":"<p>AnimTarget: <code>Keyframes</code> | <code>CA.CAnimation</code></p> <p>Types, that can represent an animation.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Duration/","title":"Duration","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / Duration</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Duration/#type-alias-duration","title":"Type Alias: Duration","text":"<p>Duration: <code>`${number}s`</code> | <code>`${number}ms`</code> | <code>number</code></p> <p>Duration can be set in seconds or milliseconds. In case no unit is set, it defaults to seconds.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Easing/","title":"Easing","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / Easing</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Easing/#type-alias-easing","title":"Type Alias: Easing","text":"<p>Easing: <code>\"none\"</code> | <code>\"linear\"</code> | <code>\"step-start\"</code> | <code>\"step-end\"</code> | <code>\"ease\"</code> | <code>\"ease-in\"</code> | <code>\"ease-out\"</code> | <code>\"ease-in-out\"</code> | <code>`cubic-bezier(${number},${number},${number},${number})`</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Keyframes/","title":"Keyframes","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / Keyframes</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Keyframes/#type-alias-keyframes","title":"Type Alias: Keyframes","text":"<p>Keyframes: <code>Keyframe</code>[]</p> <p>Sequence of keyframe descriptors</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Position/","title":"Position","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / Position</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/Position/#type-alias-position","title":"Type Alias: Position","text":"<p>Position: <code>`${number}%`</code> | <code>Duration</code></p> <p>Seek position in the animation.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/RegroupStrategy/","title":"RegroupStrategy","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Anim / RegroupStrategy</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Anim/type-aliases/RegroupStrategy/#type-alias-regroupstrategy","title":"Type Alias: RegroupStrategy","text":"<p>RegroupStrategy: <code>\"fade\"</code> | <code>\"drilldown\"</code> | <code>\"aggregate\"</code></p> <p>Type of transition when the categorical series differ on the source and the target chart.</p> <ul> <li>fade: the source chart fades out while the target chart fades in</li> <li>drilldown: markers are splitted to be able to represent the target chart</li> <li>aggregate: markers are aggregated then splitted differently to be able to     represent the target chart.</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/","title":"Index","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Config</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/#config","title":"Config","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Config/#interfaces","title":"Interfaces","text":"<ul> <li>Channel</li> <li>ChannelRange</li> <li>Channels</li> <li>Chart</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/#type-aliases","title":"Type Aliases","text":"<ul> <li>AutoBool</li> <li>ChannelExtrema</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/","title":"Channel","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Config / Channel</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#interface-channel","title":"Interface: Channel","text":"<p>Channels are the main building blocks of the chart. Each channel describes a particular aspect of the markers (vertical &amp; horizontal position, color, etc.) and connects them to the underlying data. A single measure and an ordered list of dimensions can be on each channel. The dimensions will recursively slice the measure on the channel. The channels are represented on the chart as an axis or legend.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#attach","title":"attach?","text":"<p><code>optional</code> attach: <code>SeriesList</code></p> <p>List of data series descriptors to be added to the channel beside the ones already added.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#axis","title":"axis?","text":"<p><code>optional</code> axis: <code>AutoBool</code></p> <p>Enables the axis line on axis channels.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#detach","title":"detach?","text":"<p><code>optional</code> detach: <code>SeriesList</code></p> <p>List of data series descriptors to be removed from the channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#guides","title":"guides?","text":"<p><code>optional</code> guides: <code>AutoBool</code></p> <p>Enables the grid lines on axis channels showing dimension data.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#interlacing","title":"interlacing?","text":"<p><code>optional</code> interlacing: <code>AutoBool</code></p> <p>Enables the interlacing on axis channels showing measure data.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#labellevel","title":"labelLevel?","text":"<p><code>optional</code> labelLevel: <code>number</code> | <code>\"auto\"</code></p> <p>Only one dimension can be shown on an axis or legend by name. This index specifies which attached series should be used.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#labels","title":"labels?","text":"<p><code>optional</code> labels: <code>AutoBool</code></p> <p>Enables the axis labels on axis channels.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#markerguides","title":"markerGuides?","text":"<p><code>optional</code> markerGuides: <code>AutoBool</code></p> <p>Enables the guide lines on axis channels showing measure data for all marker positions.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#range","title":"range?","text":"<p><code>optional</code> range: <code>ChannelRange</code></p> <p>Specifies the range that determines how the represented data scales on the channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#set","title":"set?","text":"<p><code>optional</code> set: <code>SeriesList</code></p> <p>List of data series descriptors on the channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#step","title":"step?","text":"<p><code>optional</code> step: <code>number</code> | <code>\"auto\"</code></p> <p>Base interval of the interlacing on the axis.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#ticks","title":"ticks?","text":"<p><code>optional</code> ticks: <code>AutoBool</code></p> <p>Enables the axis ticks on axis channels showing measure data.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channel/#title","title":"title?","text":"<p><code>optional</code> title: <code>string</code></p> <p>This title is shown on the axis or legend corresponding to the channel. If 'auto', the title will be the name of the measure attached to that channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/ChannelRange/","title":"ChannelRange","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Config / ChannelRange</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/ChannelRange/#interface-channelrange","title":"Interface: ChannelRange","text":"<p>Channel range specifies how to scale the represented data.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/ChannelRange/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/ChannelRange/#max","title":"max?","text":"<p><code>optional</code> max: <code>ChannelExtrema</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/ChannelRange/#min","title":"min?","text":"<p><code>optional</code> min: <code>ChannelExtrema</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/","title":"Channels","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Config / Channels</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#interface-channels","title":"Interface: Channels","text":"<p>Channel configuration. Setting a channel to null will remove all data series from it.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#color","title":"color?","text":"<p><code>optional</code> color: <code>Channel</code></p> <p>Parameters for the markers' base color. The markers' actual color can also be affected by the lightness channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#label","title":"label?","text":"<p><code>optional</code> label: <code>Channel</code></p> <p>Parameters for the content of the labels that appear on the markers.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#lightness","title":"lightness?","text":"<p><code>optional</code> lightness: <code>Channel</code></p> <p>Parameters for markers' lightness.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#noop","title":"noop?","text":"<p><code>optional</code> noop: <code>Channel</code></p> <p>Splits the markers as all the other channels, but have no effect on the markers' appearance. Thus, it only works with dimensions.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#size","title":"size?","text":"<p><code>optional</code> size: <code>Channel</code></p> <p>Parameters for the markers' size. Effective only for circle and line geometry affecting the circle area or the line width respectively.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#x","title":"x?","text":"<p><code>optional</code> x: <code>Channel</code></p> <p>Parameters for the X-axis, determining the position of the markers on the x-axis - or their angle when using polar coordinates. Note: leaving x and y channels empty will result in a chart \"without coordinates\" like a Treemap or a Bubble Chart.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Channels/#y","title":"y?","text":"<p><code>optional</code> y: <code>Channel</code></p> <p>Parameters for the Y-axis, determining the position of the markers on the y-axis - or their radius when using polar coordinates) .</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/","title":"Chart","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Config / Chart</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#interface-chart","title":"Interface: Chart","text":"<p>The config contains all of the parameters needed to render a particular static chart or a state of an animated chart.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#align","title":"align?","text":"<p><code>optional</code> align: <code>\"none\"</code> | <code>\"center\"</code> | <code>\"stretch\"</code></p> <p>Sets the alignment of the markers with relation to the x- or the y-axis depending on where the measure is. In case both axes have measures on them, this is determined by the <code>orientation</code> of the chart.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#angle","title":"angle?","text":"<p><code>optional</code> angle: <code>number</code></p> <p>Rotates the plot area to the specified angle in radian. Note: this is an experimental, not tested feature.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#caption","title":"caption?","text":"<p><code>optional</code> caption: <code>string</code></p> <p>This is the caption shown on the bottom of the chart. If set to null, the caption will not be shown and will not take up any space in the chart layout.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#channels","title":"channels?","text":"<p><code>optional</code> channels: <code>Channels</code></p> <p>List of the chart's channels' configuration. The chart object also extends the channels object as a configuration shorthand.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#coordsystem","title":"coordSystem?","text":"<p><code>optional</code> coordSystem: <code>\"cartesian\"</code> | <code>\"polar\"</code></p> <p>Sets the coordinate system for the chart. Switch to the 'polar' coordinate system to create a chart from the pie/radial chart family.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#geometry","title":"geometry?","text":"<p><code>optional</code> geometry: <code>\"rectangle\"</code> | <code>\"circle\"</code> | <code>\"area\"</code> | <code>\"line\"</code></p> <p>Sets the geometric elements used for the markers to represent the data.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#legend","title":"legend?","text":"<p><code>optional</code> legend: <code>\"auto\"</code> | <code>\"color\"</code> | <code>\"lightness\"</code> | <code>\"size\"</code></p> <p>Specifies which channel should be shown on the legend. If set to null, the legend will not be shown and will not take up any space in the chart layout. If set to auto, the internal logic will select the most suitable channel for the legend.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#orientation","title":"orientation?","text":"<p><code>optional</code> orientation: <code>\"auto\"</code> | <code>\"horizontal\"</code> | <code>\"vertical\"</code></p> <p>If both axes have measures on them, this parameter sets the orientation of the chart, meaning to which axis the graphical elements are oriented to.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#reverse","title":"reverse?","text":"<p><code>optional</code> reverse: <code>boolean</code></p> <p>Reverts the order of the markers if set.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#sort","title":"sort?","text":"<p><code>optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <ul> <li>'none': markers are sorted in the order as the corresponding data appear in     the data set.</li> <li>'byValue': markers will be sorted by the corresponding measure (if present) in     decreasing order.</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#split","title":"split?","text":"<p><code>optional</code> split: <code>boolean</code></p> <p>If set to true, markers will be split by the dimension(s) along the axis. This works if you have at least one dimension and a measure on the same axis.In case both axes have measures and dimension(s) on them, this is determined by the <code>orientation</code> of the chart.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#subtitle","title":"subtitle?","text":"<p><code>optional</code> subtitle: <code>string</code></p> <p>This is the subtitle shown on the top of the chart under the title. If set to null, the subtitle will not be shown and will not take up any space in the chart layout.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#title","title":"title?","text":"<p><code>optional</code> title: <code>string</code></p> <p>This is the title shown on the top of the chart. If set to null, the title will not be shown and will not take up any space in the chart layout.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/interfaces/Chart/#tooltip","title":"tooltip?","text":"<p><code>optional</code> tooltip: <code>string</code></p> <p>Unique identifier of the marker, the tooltip should be turned on. This parameter is not needed to set manually, tooltip will be taken care of automatically when <code>tooltip</code> feature is enabled.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/type-aliases/AutoBool/","title":"AutoBool","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Config / AutoBool</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/type-aliases/AutoBool/#type-alias-autobool","title":"Type Alias: AutoBool","text":"<p>AutoBool: <code>boolean</code> | <code>\"auto\"</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/type-aliases/ChannelExtrema/","title":"ChannelExtrema","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Config / ChannelExtrema</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Config/type-aliases/ChannelExtrema/#type-alias-channelextrema","title":"Type Alias: ChannelExtrema","text":"<p>ChannelExtrema: <code>number</code> | <code>`${number}%`</code> | <code>`${number}min`</code> | <code>`${number}max`</code> | <code>\"auto\"</code></p> <p>Units:</p> <ul> <li>no unit: the same unit as in the data;</li> <li>%: percentage relative to the min/max of the data;</li> <li>min,max: offset from min/max of the data;</li> <li>auto: automatic range based on chart config;</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/","title":"Index","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/#data","title":"Data","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/#interfaces","title":"Interfaces","text":"<ul> <li>BaseDimension</li> <li>BaseMeasure</li> <li>DimensionInfo</li> <li>ExplicitMeasure</li> <li>ExplicitStringDimension</li> <li>Filter</li> <li>ImplicitMeasure</li> <li>ImplicitStringDimension</li> <li>IndexDimension</li> <li>MeasureInfo</li> <li>Metainfo</li> <li>Range</li> <li>Record</li> <li>SeriesBase</li> <li>SeriesDescriptor</li> <li>TableByRecords</li> <li>TableBySeries</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/#type-aliases","title":"Type Aliases","text":"<ul> <li>AggregatorType</li> <li>Dimension</li> <li>DimensionValue</li> <li>FilterCallback</li> <li>Measure</li> <li>MeasureValue</li> <li>Series</li> <li>SeriesInfo</li> <li>SeriesList</li> <li>SeriesMetaInfo</li> <li>SeriesName</li> <li>SeriesType</li> <li>Set</li> <li>StringDimension</li> <li>Value</li> <li>ValueArray</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/","title":"BaseDimension","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / BaseDimension</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/#interface-basedimension","title":"Interface: BaseDimension","text":"<p>Name of a dimension data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/#extends","title":"Extends","text":"<ul> <li><code>SeriesBase</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/#extended-by","title":"Extended by","text":"<ul> <li><code>ImplicitStringDimension</code></li> <li><code>ExplicitStringDimension</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>SeriesBase</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/#type","title":"type?","text":"<p><code>optional</code> type: <code>\"dimension\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Overrides</p> <p><code>SeriesBase</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseDimension/#values","title":"values?","text":"<p><code>optional</code> values: <code>string</code>[]</p> <p>The array that contains the values of the data series. The value types should match the data series' <code>type</code> property. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/","title":"BaseMeasure","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / BaseMeasure</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#interface-basemeasure","title":"Interface: BaseMeasure","text":"<p>Name of a measure data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#extends","title":"Extends","text":"<ul> <li><code>SeriesBase</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#extended-by","title":"Extended by","text":"<ul> <li><code>ExplicitMeasure</code></li> <li><code>ImplicitMeasure</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>SeriesBase</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#type","title":"type?","text":"<p><code>optional</code> type: <code>\"measure\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Overrides</p> <p><code>SeriesBase</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#unit","title":"unit?","text":"<p><code>optional</code> unit: <code>string</code></p> <p>Unit of the data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/BaseMeasure/#values","title":"values?","text":"<p><code>optional</code> values: <code>number</code>[]</p> <p>The array that contains the values of the data series. The value types should match the data series' <code>type</code> property. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/","title":"DimensionInfo","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / DimensionInfo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/#interface-dimensioninfo","title":"Interface: DimensionInfo","text":"<p>Meta data about dimension data series</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/#extends","title":"Extends","text":"<ul> <li><code>SeriesBase</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/#categories","title":"categories","text":"<p>categories: <code>string</code>[]</p> <p>Distinct unique values in the series</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/#length","title":"length","text":"<p>length: <code>number</code></p> <p>Count of values in the series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>SeriesBase</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/DimensionInfo/#type","title":"type","text":"<p>type: <code>\"dimension\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Overrides</p> <p><code>SeriesBase</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/","title":"ExplicitMeasure","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / ExplicitMeasure</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/#interface-explicitmeasure","title":"Interface: ExplicitMeasure","text":"<p>Name of a measure data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/#extends","title":"Extends","text":"<ul> <li><code>BaseMeasure</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>BaseMeasure</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/#type","title":"type","text":"<p>type: <code>\"measure\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Overrides</p> <p><code>BaseMeasure</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/#unit","title":"unit?","text":"<p><code>optional</code> unit: <code>string</code></p> <p>Unit of the data series.</p> <p>Inherited from</p> <p><code>BaseMeasure</code>.<code>unit</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitMeasure/#values","title":"values?","text":"<p><code>optional</code> values: <code>number</code>[]</p> <p>The array that contains the values of the data series. The value types should match the data series' <code>type</code> property. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p> <p>Inherited from</p> <p><code>BaseMeasure</code>.<code>values</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitStringDimension/","title":"ExplicitStringDimension","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / ExplicitStringDimension</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitStringDimension/#interface-explicitstringdimension","title":"Interface: ExplicitStringDimension","text":"<p>Name of a dimension data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitStringDimension/#extends","title":"Extends","text":"<ul> <li><code>BaseDimension</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitStringDimension/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitStringDimension/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>BaseDimension</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitStringDimension/#type","title":"type","text":"<p>type: <code>\"dimension\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Overrides</p> <p><code>BaseDimension</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ExplicitStringDimension/#values","title":"values?","text":"<p><code>optional</code> values: <code>string</code>[]</p> <p>The array that contains the values of the data series. The value types should match the data series' <code>type</code> property. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p> <p>Inherited from</p> <p><code>BaseDimension</code>.<code>values</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Filter/","title":"Filter","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Filter</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Filter/#interface-filter","title":"Interface: Filter","text":"<p>Filter object containing a filter function</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Filter/#extended-by","title":"Extended by","text":"<ul> <li><code>TableBySeries</code></li> <li><code>TableByRecords</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Filter/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Filter/#filter","title":"filter?","text":"<p><code>optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/","title":"ImplicitMeasure","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / ImplicitMeasure</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/#interface-implicitmeasure","title":"Interface: ImplicitMeasure","text":"<p>Name of a measure data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/#extends","title":"Extends","text":"<ul> <li><code>BaseMeasure</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>BaseMeasure</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/#type","title":"type?","text":"<p><code>optional</code> type: <code>\"measure\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Inherited from</p> <p><code>BaseMeasure</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/#unit","title":"unit?","text":"<p><code>optional</code> unit: <code>string</code></p> <p>Unit of the data series.</p> <p>Inherited from</p> <p><code>BaseMeasure</code>.<code>unit</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitMeasure/#values","title":"values","text":"<p>values: <code>number</code>[]</p> <p>The array that contains the values of the data series. The value types should match the data series' <code>type</code> property. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p> <p>Overrides</p> <p><code>BaseMeasure</code>.<code>values</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitStringDimension/","title":"ImplicitStringDimension","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / ImplicitStringDimension</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitStringDimension/#interface-implicitstringdimension","title":"Interface: ImplicitStringDimension","text":"<p>Name of a dimension data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitStringDimension/#extends","title":"Extends","text":"<ul> <li><code>BaseDimension</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitStringDimension/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitStringDimension/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>BaseDimension</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitStringDimension/#type","title":"type?","text":"<p><code>optional</code> type: <code>\"dimension\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Inherited from</p> <p><code>BaseDimension</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/ImplicitStringDimension/#values","title":"values","text":"<p>values: <code>string</code>[]</p> <p>The array that contains the values of the data series. The value types should match the data series' <code>type</code> property. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p> <p>Overrides</p> <p><code>BaseDimension</code>.<code>values</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/","title":"IndexDimension","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / IndexDimension</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/#interface-indexdimension","title":"Interface: IndexDimension","text":"<p>Name of a dimension data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/#extends","title":"Extends","text":"<ul> <li><code>SeriesBase</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/#categories","title":"categories","text":"<p>categories: <code>string</code>[]</p> <p>Distinct unique values in the series</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>SeriesBase</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/#type","title":"type?","text":"<p><code>optional</code> type: <code>\"dimension\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Overrides</p> <p><code>SeriesBase</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/IndexDimension/#values","title":"values?","text":"<p><code>optional</code> values: <code>number</code>[]</p> <p>The array that contains the values of the data series. The value types should match the data series' <code>type</code> property. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/","title":"MeasureInfo","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / MeasureInfo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#interface-measureinfo","title":"Interface: MeasureInfo","text":"<p>Meta data about measure data series</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#extends","title":"Extends","text":"<ul> <li><code>SeriesBase</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#length","title":"length","text":"<p>length: <code>number</code></p> <p>Count of values in the series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p><code>SeriesBase</code>.<code>name</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#range","title":"range","text":"<p>range: <code>Range</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#type","title":"type","text":"<p>type: <code>\"measure\"</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p> <p>Overrides</p> <p><code>SeriesBase</code>.<code>type</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/MeasureInfo/#unit","title":"unit","text":"<p>unit: <code>string</code></p> <p>Unit of the data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Metainfo/","title":"Metainfo","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Metainfo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Metainfo/#interface-metainfo","title":"Interface: Metainfo","text":"<p>Meta data about the data set</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Metainfo/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Metainfo/#series","title":"series","text":"<p>series: <code>SeriesInfo</code>[]</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Range/","title":"Range","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Range</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Range/#interface-range","title":"Interface: Range","text":"<p>Represents a numeric interval.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Range/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Range/#max","title":"max","text":"<p>max: <code>number</code></p> <p>Maximal value in the series</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Range/#min","title":"min","text":"<p>min: <code>number</code></p> <p>Minimal value in the series</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Record/","title":"Record","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Record</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Record/#interface-record","title":"Interface: Record","text":"<p>A record of the data set, containing one value of each data series corresponding to the same index.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/Record/#indexable","title":"Indexable","text":"<p>[<code>seriesName</code>: <code>string</code>]: <code>Value</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesBase/","title":"SeriesBase","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / SeriesBase</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesBase/#interface-seriesbase","title":"Interface: SeriesBase","text":"<p>Base type for data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesBase/#extended-by","title":"Extended by","text":"<ul> <li><code>BaseDimension</code></li> <li><code>IndexDimension</code></li> <li><code>BaseMeasure</code></li> <li><code>DimensionInfo</code></li> <li><code>MeasureInfo</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesBase/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesBase/#name","title":"name","text":"<p>name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in channel configuration and in data record filters. This name will also be used by default for Axis and Legend title.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesBase/#type","title":"type?","text":"<p><code>optional</code> type: <code>SeriesType</code></p> <p>Type of the data series. If not set, the library will attempt to determine the type based on the type of the first value. Number type will result in measure, string type will result in dimension.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesDescriptor/","title":"SeriesDescriptor","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / SeriesDescriptor</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesDescriptor/#interface-seriesdescriptor","title":"Interface: SeriesDescriptor","text":"<p>The name of a series with an aggregator function.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesDescriptor/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesDescriptor/#aggregator","title":"aggregator?","text":"<p><code>optional</code> aggregator: <code>AggregatorType</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/SeriesDescriptor/#name","title":"name","text":"<p>name: <code>string</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableByRecords/","title":"TableByRecords","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / TableByRecords</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableByRecords/#interface-tablebyrecords","title":"Interface: TableByRecords","text":"<p>Data table specified by records.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableByRecords/#extends","title":"Extends","text":"<ul> <li><code>Filter</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableByRecords/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableByRecords/#filter","title":"filter?","text":"<p><code>optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p><code>Filter</code>.<code>filter</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableByRecords/#records","title":"records","text":"<p>records: (<code>Record</code> | <code>ValueArray</code>)[]</p> <p>The array of data records that make up the data set.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableByRecords/#series","title":"series?","text":"<p><code>optional</code> series: <code>Series</code>[]</p> <p>The information about the data series in the records of the data set. Note: not needed if it was previously specified.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableBySeries/","title":"TableBySeries","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / TableBySeries</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableBySeries/#interface-tablebyseries","title":"Interface: TableBySeries","text":"<p>Data table specified by series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableBySeries/#extends","title":"Extends","text":"<ul> <li><code>Filter</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableBySeries/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableBySeries/#filter","title":"filter?","text":"<p><code>optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p><code>Filter</code>.<code>filter</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/interfaces/TableBySeries/#series","title":"series","text":"<p>series: <code>Series</code>[]</p> <p>The series that make up the data set.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/AggregatorType/","title":"AggregatorType","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / AggregatorType</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/AggregatorType/#type-alias-aggregatortype","title":"Type Alias: AggregatorType","text":"<p>AggregatorType: <code>\"sum\"</code> | <code>\"count\"</code> | <code>\"min\"</code> | <code>\"max\"</code> | <code>\"mean\"</code> | <code>\"distinct\"</code></p> <p>Types of the different available data series aggregators:</p> <ul> <li>sum: sum of the values (default)</li> <li>count: count of the values</li> <li>min: minima of the values</li> <li>max: maxima of the values</li> <li>mean: average/mean of the values</li> <li>distinct: number of different values</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Dimension/","title":"Dimension","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Dimension</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Dimension/#type-alias-dimension","title":"Type Alias: Dimension","text":"<p>Dimension: <code>IndexDimension</code> | <code>StringDimension</code></p> <p>Name of a dimension data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/DimensionValue/","title":"DimensionValue","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / DimensionValue</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/DimensionValue/#type-alias-dimensionvalue","title":"Type Alias: DimensionValue","text":"<p>DimensionValue: <code>string</code></p> <p>Represents a categorical value</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/FilterCallback/","title":"FilterCallback","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / FilterCallback</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/FilterCallback/#type-alias-filtercallback","title":"Type Alias: FilterCallback()","text":"<p>FilterCallback: (<code>record</code>) =&gt; <code>boolean</code></p> <p>A callback function receives a record</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/FilterCallback/#parameters","title":"Parameters","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/FilterCallback/#record","title":"record","text":"<p><code>Record</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/FilterCallback/#returns","title":"Returns","text":"<p><code>boolean</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Measure/","title":"Measure","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Measure</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Measure/#type-alias-measure","title":"Type Alias: Measure","text":"<p>Measure: <code>ImplicitMeasure</code> | <code>ExplicitMeasure</code></p> <p>Name of a measure data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/MeasureValue/","title":"MeasureValue","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / MeasureValue</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/MeasureValue/#type-alias-measurevalue","title":"Type Alias: MeasureValue","text":"<p>MeasureValue: <code>number</code> | <code>null</code></p> <p>Represents a data value</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Series/","title":"Series","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Series</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Series/#type-alias-series","title":"Type Alias: Series","text":"<p>Series: <code>Dimension</code> | <code>Measure</code></p> <p>Defines a data series of the data set, and contains a particular variable's values in the data set and meta info about the variable.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesInfo/","title":"SeriesInfo","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / SeriesInfo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesInfo/#type-alias-seriesinfo","title":"Type Alias: SeriesInfo","text":"<p>SeriesInfo: <code>DimensionInfo</code> | <code>MeasureInfo</code></p> <p>MetaInfo for different series types.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesList/","title":"SeriesList","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / SeriesList</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesList/#type-alias-serieslist","title":"Type Alias: SeriesList","text":"<p>SeriesList: <code>SeriesDescriptor</code>[]</p> <p>Array or a single data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesMetaInfo/","title":"SeriesMetaInfo","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / SeriesMetaInfo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesMetaInfo/#type-alias-seriesmetainfo","title":"Type Alias: SeriesMetaInfo","text":"<p>SeriesMetaInfo: <code>SeriesInfo</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesName/","title":"SeriesName","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / SeriesName</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesName/#type-alias-seriesname","title":"Type Alias: SeriesName","text":"<p>SeriesName: <code>string</code></p> <p>Name of the data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesType/","title":"SeriesType","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / SeriesType</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/SeriesType/#type-alias-seriestype","title":"Type Alias: SeriesType","text":"<p>SeriesType: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added     as strings);</li> <li>'measure' - continuous data containing numbers.</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Set/","title":"Set","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Set</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Set/#type-alias-set","title":"Type Alias: Set","text":"<p>Set: <code>TableBySeries</code> | <code>TableByRecords</code></p> <p>Data set is a collection of related data series. Each chart works on a single data set.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/StringDimension/","title":"StringDimension","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / StringDimension</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/StringDimension/#type-alias-stringdimension","title":"Type Alias: StringDimension","text":"<p>StringDimension: <code>ImplicitStringDimension</code> | <code>ExplicitStringDimension</code></p> <p>Name of a dimension data series.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Value/","title":"Value","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / Value</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/Value/#type-alias-value","title":"Type Alias: Value","text":"<p>Value: <code>string</code> | <code>number</code></p> <p>Represents a categorical or data value</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/ValueArray/","title":"ValueArray","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Data / ValueArray</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Data/type-aliases/ValueArray/#type-alias-valuearray","title":"Type Alias: ValueArray","text":"<p>ValueArray: <code>Value</code>[]</p> <p>Values of a data record in the order of the series in the dataset.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/","title":"Index","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/#styles","title":"Styles","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/#interfaces","title":"Interfaces","text":"<ul> <li>Axis</li> <li>AxisLabel</li> <li>AxisTitle</li> <li>Box</li> <li>Chart</li> <li>DataPoint</li> <li>Font</li> <li>Guides</li> <li>Interlacing</li> <li>Legend</li> <li>LegendMarker</li> <li>Logo</li> <li>Marker</li> <li>MarkerLabel</li> <li>OrientedLabel</li> <li>Padding</li> <li>Plot</li> <li>Text</li> <li>Ticks</li> <li>Tooltip</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/#type-aliases","title":"Type Aliases","text":"<ul> <li>Angle</li> <li>Color</li> <li>ColorGradient</li> <li>ColorPalette</li> <li>ColorStop</li> <li>ColorTransform</li> <li>Label</li> <li>Length</li> <li>NumberScale</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/","title":"Axis","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Axis</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#interface-axis","title":"Interface: Axis","text":"<p>Properties for an axis.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>Color of the axis line.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#guides","title":"guides?","text":"<p><code>optional</code> guides: <code>Guides</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#interlacing","title":"interlacing?","text":"<p><code>optional</code> interlacing: <code>Interlacing</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#label","title":"label?","text":"<p><code>optional</code> label: <code>AxisLabel</code></p> <p>Style parameters of the axis labels.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#spacing","title":"spacing?","text":"<p><code>optional</code> spacing: <code>`${number}%`</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#ticks","title":"ticks?","text":"<p><code>optional</code> ticks: <code>Ticks</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Axis/#title","title":"title?","text":"<p><code>optional</code> title: <code>AxisTitle</code></p> <p>Style parameters of the axis title.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/","title":"AxisLabel","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / AxisLabel</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#interface-axislabel","title":"Interface: AxisLabel","text":"<p>Style settings for the values shown on the axis to display the scale being used or the categories along the axis. Note: textAlign has no effect on the Axis label.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#extends","title":"Extends","text":"<ul> <li><code>OrientedLabel</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#angle","title":"angle?","text":"<p><code>optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>angle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>color</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#fontfamily","title":"fontFamily?","text":"<p><code>optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontFamily</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#fontsize","title":"fontSize?","text":"<p><code>optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontSize</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#fontstyle","title":"fontStyle?","text":"<p><code>optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontStyle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#fontweight","title":"fontWeight?","text":"<p><code>optional</code> fontWeight: <code>number</code> | <code>\"normal\"</code> | <code>\"bold\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontWeight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#maxfractiondigits","title":"maxFractionDigits?","text":"<p><code>optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>maxFractionDigits</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#numberformat","title":"numberFormat?","text":"<p><code>optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators (e.g. 1 234 567), 'prefixed' uses scientific notation (e.g. 1.234k).</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>numberFormat</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#numberscale","title":"numberScale?","text":"<p><code>optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>numberScale</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#orientation","title":"orientation?","text":"<p><code>optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"normal\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>orientation</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#position","title":"position?","text":"<p><code>optional</code> position: <code>\"axis\"</code> | <code>\"max-edge\"</code> | <code>\"min-edge\"</code></p> <p>Label position relatively to the plot.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#side","title":"side?","text":"<p><code>optional</code> side: <code>\"positive\"</code> | <code>\"negative\"</code></p> <p>Label alignment relatively to the position on the plot.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisLabel/#textalign","title":"textAlign?","text":"<p><code>optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>textAlign</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/","title":"AxisTitle","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / AxisTitle</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#interface-axistitle","title":"Interface: AxisTitle","text":"<p>Style settings of the Axis title</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#extends","title":"Extends","text":"<ul> <li><code>Label</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p><code>Label.color</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#fontfamily","title":"fontFamily?","text":"<p><code>optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p><code>Label.fontFamily</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#fontsize","title":"fontSize?","text":"<p><code>optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size.</p> <p>Inherited from</p> <p><code>Label.fontSize</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#fontstyle","title":"fontStyle?","text":"<p><code>optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p><code>Label.fontStyle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#fontweight","title":"fontWeight?","text":"<p><code>optional</code> fontWeight: <code>number</code> | <code>\"normal\"</code> | <code>\"bold\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p><code>Label.fontWeight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#maxfractiondigits","title":"maxFractionDigits?","text":"<p><code>optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p><code>Label.maxFractionDigits</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#numberformat","title":"numberFormat?","text":"<p><code>optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators (e.g. 1 234 567), 'prefixed' uses scientific notation (e.g. 1.234k).</p> <p>Inherited from</p> <p><code>Label.numberFormat</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#numberscale","title":"numberScale?","text":"<p><code>optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p><code>Label.numberScale</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#orientation","title":"orientation?","text":"<p><code>optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code></p> <p>The orientation of the title.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#position","title":"position?","text":"<p><code>optional</code> position: <code>\"axis\"</code> | <code>\"max-edge\"</code> | <code>\"min-edge\"</code></p> <p>Title position relatively to the plot.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#side","title":"side?","text":"<p><code>optional</code> side: <code>\"positive\"</code> | <code>\"negative\"</code> | <code>\"upon\"</code></p> <p>Title alignment relatively to the position on the plot.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#textalign","title":"textAlign?","text":"<p><code>optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p><code>Label.textAlign</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#vposition","title":"vposition?","text":"<p><code>optional</code> vposition: <code>\"begin\"</code> | <code>\"middle\"</code> | <code>\"end\"</code></p> <p>Title position on the axis or edge.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/AxisTitle/#vside","title":"vside?","text":"<p><code>optional</code> vside: <code>\"positive\"</code> | <code>\"negative\"</code> | <code>\"upon\"</code></p> <p>Title alignment on the axis or edge.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Box/","title":"Box","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Box</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Box/#interface-box","title":"Interface: Box","text":"<p>Represents a box with border and background.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Box/#extended-by","title":"Extended by","text":"<ul> <li><code>Tooltip</code></li> <li><code>Plot</code></li> <li><code>Legend</code></li> <li><code>Chart</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Box/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Box/#backgroundcolor","title":"backgroundColor?","text":"<p><code>optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Box/#bordercolor","title":"borderColor?","text":"<p><code>optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Box/#borderwidth","title":"borderWidth?","text":"<p><code>optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/","title":"Chart","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Chart</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#interface-chart","title":"Interface: Chart","text":"<p>Properties for the chart.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#extends","title":"Extends","text":"<ul> <li><code>Padding</code>.<code>Box</code>.<code>Font</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#backgroundcolor","title":"backgroundColor?","text":"<p><code>optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>backgroundColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#bordercolor","title":"borderColor?","text":"<p><code>optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#borderwidth","title":"borderWidth?","text":"<p><code>optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderWidth</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#caption","title":"caption?","text":"<p><code>optional</code> caption: <code>Label</code></p> <p>Style settings for the main chart caption.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#fontfamily","title":"fontFamily?","text":"<p><code>optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontFamily</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#fontsize","title":"fontSize?","text":"<p><code>optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontSize</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#fontstyle","title":"fontStyle?","text":"<p><code>optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontStyle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#fontweight","title":"fontWeight?","text":"<p><code>optional</code> fontWeight: <code>number</code> | <code>\"normal\"</code> | <code>\"bold\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontWeight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#legend","title":"legend?","text":"<p><code>optional</code> legend: <code>Legend</code></p> <p>Style settings for the legend.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#logo","title":"logo?","text":"<p><code>optional</code> logo: <code>Logo</code></p> <p>Style settings of the Vizzu logo.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#plot","title":"plot?","text":"<p><code>optional</code> plot: <code>Plot</code></p> <p>Style settings for the plot area.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#subtitle","title":"subtitle?","text":"<p><code>optional</code> subtitle: <code>Label</code></p> <p>Style settings for the main chart subtitle.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#title","title":"title?","text":"<p><code>optional</code> title: <code>Label</code></p> <p>Style settings for the main chart title.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Chart/#tooltip","title":"tooltip?","text":"<p><code>optional</code> tooltip: <code>Tooltip</code></p> <p>Style settings for the tooltip.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/","title":"DataPoint","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / DataPoint</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#interface-datapoint","title":"Interface: DataPoint","text":"<p>Data related properties of a marker.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#extended-by","title":"Extended by","text":"<ul> <li><code>Marker</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#circlemaxradius","title":"circleMaxRadius?","text":"<p><code>optional</code> circleMaxRadius: <code>number</code></p> <p>Maximum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#circleminradius","title":"circleMinRadius?","text":"<p><code>optional</code> circleMinRadius: <code>number</code></p> <p>Minimum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#colorgradient","title":"colorGradient?","text":"<p><code>optional</code> colorGradient: <code>string</code></p> <p>Color gradient used for the measure on the color channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#colorpalette","title":"colorPalette?","text":"<p><code>optional</code> colorPalette: <code>string</code></p> <p>Color palette used for the dimension on the color channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#linemaxwidth","title":"lineMaxWidth?","text":"<p><code>optional</code> lineMaxWidth: <code>number</code></p> <p>Maximum line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#lineminwidth","title":"lineMinWidth?","text":"<p><code>optional</code> lineMinWidth: <code>number</code></p> <p>Minimum of line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#maxlightness","title":"maxLightness?","text":"<p><code>optional</code> maxLightness: <code>number</code></p> <p>Lightness value associated with the maximum value of the lightness channel's range.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#minlightness","title":"minLightness?","text":"<p><code>optional</code> minLightness: <code>number</code></p> <p>Lightness value associated with the minimum value of the lightness channel's range.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/DataPoint/#rectanglespacing","title":"rectangleSpacing?","text":"<p><code>optional</code> rectangleSpacing: <code>number</code></p> <p>Spacing between bars/columns. The value specifies the size of the spacing as a factor of the marker size. e.g.: 0.1 means 10% of marker height/width depending on the chart's orientation.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/","title":"Font","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Font</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/#interface-font","title":"Interface: Font","text":"<p>Font properties.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/#extended-by","title":"Extended by","text":"<ul> <li><code>Tooltip</code></li> <li><code>Chart</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/#fontfamily","title":"fontFamily?","text":"<p><code>optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/#fontsize","title":"fontSize?","text":"<p><code>optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/#fontstyle","title":"fontStyle?","text":"<p><code>optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Font/#fontweight","title":"fontWeight?","text":"<p><code>optional</code> fontWeight: <code>number</code> | <code>\"normal\"</code> | <code>\"bold\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Guides/","title":"Guides","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Guides</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Guides/#interface-guides","title":"Interface: Guides","text":"<p>Properties for guide lines.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Guides/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Guides/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>The color of the guides.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Guides/#linewidth","title":"lineWidth?","text":"<p><code>optional</code> lineWidth: <code>number</code></p> <p>Line width of the guide in pixel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Interlacing/","title":"Interlacing","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Interlacing</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Interlacing/#interface-interlacing","title":"Interface: Interlacing","text":"<p>Properties for axis interlacing.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Interlacing/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Interlacing/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>Color of the interlacing pattern.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/","title":"Legend","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Legend</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#interface-legend","title":"Interface: Legend","text":"<p>Properties for the legend.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#extends","title":"Extends","text":"<ul> <li><code>Padding</code>.<code>Box</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#backgroundcolor","title":"backgroundColor?","text":"<p><code>optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>backgroundColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#bordercolor","title":"borderColor?","text":"<p><code>optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#borderwidth","title":"borderWidth?","text":"<p><code>optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderWidth</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#label","title":"label?","text":"<p><code>optional</code> label: <code>Label</code></p> <p>Style settings for the labels on the legend.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#marker","title":"marker?","text":"<p><code>optional</code> marker: <code>LegendMarker</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#maxwidth","title":"maxWidth?","text":"<p><code>optional</code> maxWidth: <code>Length</code></p> <p>Limit for the width of the boundary box.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#title","title":"title?","text":"<p><code>optional</code> title: <code>Label</code></p> <p>Style settings for the legend's title.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#translatey","title":"translateY?","text":"<p><code>optional</code> translateY: <code>Length</code></p> <p>Vertical translation of the marker list.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Legend/#width","title":"width?","text":"<p><code>optional</code> width: <code>Length</code></p> <p>Width of the legend's boundary box.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/LegendMarker/","title":"LegendMarker","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / LegendMarker</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/LegendMarker/#interface-legendmarker","title":"Interface: LegendMarker","text":"<p>Properties for markers on the legend.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/LegendMarker/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/LegendMarker/#size","title":"size?","text":"<p><code>optional</code> size: <code>Length</code></p> <p>Size of the legend marker (diameter or side length).</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/LegendMarker/#type","title":"type?","text":"<p><code>optional</code> type: <code>\"circle\"</code> | <code>\"square\"</code></p> <p>Shape of the legend marker.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/","title":"Logo","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Logo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#interface-logo","title":"Interface: Logo","text":"<p>Properties for the logo.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#extends","title":"Extends","text":"<ul> <li><code>Padding</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#filter","title":"filter?","text":"<p><code>optional</code> filter: <code>ColorTransform</code></p> <p>Color transformation applied on the colored Vizzu Logo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Logo/#width","title":"width?","text":"<p><code>optional</code> width: <code>Length</code></p> <p>Width of the Vizzu logo</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/","title":"Marker","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Marker</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#interface-marker","title":"Interface: Marker","text":"<p>Rendering related properties of a marker.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#extends","title":"Extends","text":"<ul> <li><code>DataPoint</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#borderopacity","title":"borderOpacity?","text":"<p><code>optional</code> borderOpacity: <code>number</code></p> <p>Opacity of the marker border.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#borderopacitymode","title":"borderOpacityMode?","text":"<p><code>optional</code> borderOpacityMode: <code>\"straight\"</code> | <code>\"premultiplied\"</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#borderwidth","title":"borderWidth?","text":"<p><code>optional</code> borderWidth: <code>number</code></p> <p>Width of the marker border in pixels.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#circlemaxradius","title":"circleMaxRadius?","text":"<p><code>optional</code> circleMaxRadius: <code>number</code></p> <p>Maximum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>circleMaxRadius</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#circleminradius","title":"circleMinRadius?","text":"<p><code>optional</code> circleMinRadius: <code>number</code></p> <p>Minimum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>circleMinRadius</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#colorgradient","title":"colorGradient?","text":"<p><code>optional</code> colorGradient: <code>string</code></p> <p>Color gradient used for the measure on the color channel.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>colorGradient</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#colorpalette","title":"colorPalette?","text":"<p><code>optional</code> colorPalette: <code>string</code></p> <p>Color palette used for the dimension on the color channel.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>colorPalette</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#fillopacity","title":"fillOpacity?","text":"<p><code>optional</code> fillOpacity: <code>number</code></p> <p>Opacity of the marker fill color.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#guides","title":"guides?","text":"<p><code>optional</code> guides: <code>Guides</code></p> <p>Style settings for guide lines drawn for the markers.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#label","title":"label?","text":"<p><code>optional</code> label: <code>MarkerLabel</code></p> <p>Style settings for the marker labels.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#linemaxwidth","title":"lineMaxWidth?","text":"<p><code>optional</code> lineMaxWidth: <code>number</code></p> <p>Maximum line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>lineMaxWidth</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#lineminwidth","title":"lineMinWidth?","text":"<p><code>optional</code> lineMinWidth: <code>number</code></p> <p>Minimum of line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>lineMinWidth</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#maxlightness","title":"maxLightness?","text":"<p><code>optional</code> maxLightness: <code>number</code></p> <p>Lightness value associated with the maximum value of the lightness channel's range.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>maxLightness</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#minlightness","title":"minLightness?","text":"<p><code>optional</code> minLightness: <code>number</code></p> <p>Lightness value associated with the minimum value of the lightness channel's range.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>minLightness</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Marker/#rectanglespacing","title":"rectangleSpacing?","text":"<p><code>optional</code> rectangleSpacing: <code>number</code></p> <p>Spacing between bars/columns. The value specifies the size of the spacing as a factor of the marker size. e.g.: 0.1 means 10% of marker height/width depending on the chart's orientation.</p> <p>Inherited from</p> <p><code>DataPoint</code>.<code>rectangleSpacing</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/","title":"MarkerLabel","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / MarkerLabel</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#interface-markerlabel","title":"Interface: MarkerLabel","text":"<p>Properties for marker label.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#extends","title":"Extends","text":"<ul> <li><code>OrientedLabel</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#angle","title":"angle?","text":"<p><code>optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>angle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>color</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#filter","title":"filter?","text":"<p><code>optional</code> filter: <code>ColorTransform</code></p> <p>Defines the transformation used for calculating the label color from the marker color.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#fontfamily","title":"fontFamily?","text":"<p><code>optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontFamily</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#fontsize","title":"fontSize?","text":"<p><code>optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontSize</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#fontstyle","title":"fontStyle?","text":"<p><code>optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontStyle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#fontweight","title":"fontWeight?","text":"<p><code>optional</code> fontWeight: <code>number</code> | <code>\"normal\"</code> | <code>\"bold\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>fontWeight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#format","title":"format?","text":"<p><code>optional</code> format: <code>\"measureFirst\"</code> | <code>\"dimensionsFirst\"</code></p> <p>Sets the order of values on the label if both a measure and a dimension are present.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#maxfractiondigits","title":"maxFractionDigits?","text":"<p><code>optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>maxFractionDigits</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#numberformat","title":"numberFormat?","text":"<p><code>optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators (e.g. 1 234 567), 'prefixed' uses scientific notation (e.g. 1.234k).</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>numberFormat</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#numberscale","title":"numberScale?","text":"<p><code>optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>numberScale</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#orientation","title":"orientation?","text":"<p><code>optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"normal\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>orientation</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#position","title":"position?","text":"<p><code>optional</code> position: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code> | <code>\"top\"</code> | <code>\"bottom\"</code></p> <p>The label position relatively to the marker.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/MarkerLabel/#textalign","title":"textAlign?","text":"<p><code>optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p><code>OrientedLabel</code>.<code>textAlign</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/","title":"OrientedLabel","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / OrientedLabel</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#interface-orientedlabel","title":"Interface: OrientedLabel","text":"<p>Properties for a rotatable label.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#extends","title":"Extends","text":"<ul> <li><code>Label</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#extended-by","title":"Extended by","text":"<ul> <li><code>MarkerLabel</code></li> <li><code>AxisLabel</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#angle","title":"angle?","text":"<p><code>optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p><code>Label.color</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#fontfamily","title":"fontFamily?","text":"<p><code>optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p><code>Label.fontFamily</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#fontsize","title":"fontSize?","text":"<p><code>optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size.</p> <p>Inherited from</p> <p><code>Label.fontSize</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#fontstyle","title":"fontStyle?","text":"<p><code>optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p><code>Label.fontStyle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#fontweight","title":"fontWeight?","text":"<p><code>optional</code> fontWeight: <code>number</code> | <code>\"normal\"</code> | <code>\"bold\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p><code>Label.fontWeight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#maxfractiondigits","title":"maxFractionDigits?","text":"<p><code>optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p><code>Label.maxFractionDigits</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#numberformat","title":"numberFormat?","text":"<p><code>optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators (e.g. 1 234 567), 'prefixed' uses scientific notation (e.g. 1.234k).</p> <p>Inherited from</p> <p><code>Label.numberFormat</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#numberscale","title":"numberScale?","text":"<p><code>optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p><code>Label.numberScale</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#orientation","title":"orientation?","text":"<p><code>optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"normal\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>Label.paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/OrientedLabel/#textalign","title":"textAlign?","text":"<p><code>optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p><code>Label.textAlign</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/","title":"Padding","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Padding</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/#interface-padding","title":"Interface: Padding","text":"<p>Padding on the four sides of the bounding rect.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/#extended-by","title":"Extended by","text":"<ul> <li><code>Logo</code></li> <li><code>Plot</code></li> <li><code>Legend</code></li> <li><code>Chart</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Padding/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/","title":"Plot","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Plot</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#interface-plot","title":"Interface: Plot","text":"<p>Properties for the plot.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#extends","title":"Extends","text":"<ul> <li><code>Padding</code>.<code>Box</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#areacolor","title":"areaColor?","text":"<p><code>optional</code> areaColor: <code>Color</code></p> <p>Color of the plot area.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#backgroundcolor","title":"backgroundColor?","text":"<p><code>optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>backgroundColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#bordercolor","title":"borderColor?","text":"<p><code>optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#borderwidth","title":"borderWidth?","text":"<p><code>optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderWidth</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#marker","title":"marker?","text":"<p><code>optional</code> marker: <code>Marker</code></p> <p>Style settings for the markers.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#overflow","title":"overflow?","text":"<p><code>optional</code> overflow: <code>\"hidden\"</code> | <code>\"visible\"</code></p> <p>Controls drawing outside of the plot area. If hidden, clipping will be set for the boundary of the coordinate system.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#paddingbottom","title":"paddingBottom?","text":"<p><code>optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingBottom</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#paddingleft","title":"paddingLeft?","text":"<p><code>optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingLeft</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#paddingright","title":"paddingRight?","text":"<p><code>optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingRight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#paddingtop","title":"paddingTop?","text":"<p><code>optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p><code>Padding</code>.<code>paddingTop</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#xaxis","title":"xAxis?","text":"<p><code>optional</code> xAxis: <code>Axis</code></p> <p>Style settings for the x-axis - or the angle when using polar coordinates.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Plot/#yaxis","title":"yAxis?","text":"<p><code>optional</code> yAxis: <code>Axis</code></p> <p>Style settings for the y-axis - or the radius when using polar coordinates.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/","title":"Text","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Text</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/#interface-text","title":"Interface: Text","text":"<p>Text formatting properties.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/#maxfractiondigits","title":"maxFractionDigits?","text":"<p><code>optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/#numberformat","title":"numberFormat?","text":"<p><code>optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators (e.g. 1 234 567), 'prefixed' uses scientific notation (e.g. 1.234k).</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/#numberscale","title":"numberScale?","text":"<p><code>optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Text/#textalign","title":"textAlign?","text":"<p><code>optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Ticks/","title":"Ticks","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Ticks</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Ticks/#interface-ticks","title":"Interface: Ticks","text":"<p>Properties for axis ticks.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Ticks/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Ticks/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>Color of the ticks on the axis.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Ticks/#length","title":"length?","text":"<p><code>optional</code> length: <code>Length</code></p> <p>Length of the ticks on the axis.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Ticks/#linewidth","title":"lineWidth?","text":"<p><code>optional</code> lineWidth: <code>number</code></p> <p>Line width of the ticks on the axis.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Ticks/#position","title":"position?","text":"<p><code>optional</code> position: <code>\"center\"</code> | <code>\"outside\"</code> | <code>\"inside\"</code></p> <p>Position of the ticks on the axis relatively to the axis line.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/","title":"Tooltip","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Tooltip</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#interface-tooltip","title":"Interface: Tooltip","text":"<p>Properties for tooltip.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#extends","title":"Extends","text":"<ul> <li><code>Font</code>.<code>Box</code></li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#properties","title":"Properties","text":""},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#arrowsize","title":"arrowSize?","text":"<p><code>optional</code> arrowSize: <code>number</code></p> <p>Base size of the info bubble arrow</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#backgroundcolor","title":"backgroundColor?","text":"<p><code>optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>backgroundColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#bordercolor","title":"borderColor?","text":"<p><code>optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderColor</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#borderradius","title":"borderRadius?","text":"<p><code>optional</code> borderRadius: <code>number</code></p> <p>Corner radius for the info bubble</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#borderwidth","title":"borderWidth?","text":"<p><code>optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p><code>Box</code>.<code>borderWidth</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#color","title":"color?","text":"<p><code>optional</code> color: <code>Color</code></p> <p>The foreground color of the tooltip text</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#distance","title":"distance?","text":"<p><code>optional</code> distance: <code>number</code></p> <p>Distance between the data point and the info bubble</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#dropshadow","title":"dropShadow?","text":"<p><code>optional</code> dropShadow: <code>number</code></p> <p>Drop shadow distance from the info bubble</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#fontfamily","title":"fontFamily?","text":"<p><code>optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontFamily</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#fontsize","title":"fontSize?","text":"<p><code>optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontSize</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#fontstyle","title":"fontStyle?","text":"<p><code>optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontStyle</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#fontweight","title":"fontWeight?","text":"<p><code>optional</code> fontWeight: <code>number</code> | <code>\"normal\"</code> | <code>\"bold\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p><code>Font</code>.<code>fontWeight</code></p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#layout","title":"layout?","text":"<p><code>optional</code> layout: <code>\"singleLine\"</code> | <code>\"multiLine\"</code></p> <p>The layout of the tooltip text</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#radius","title":"radius?","text":"<p><code>optional</code> radius: <code>number</code></p> <p>Data point marker radius</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#seriesname","title":"seriesName?","text":"<p><code>optional</code> seriesName: <code>string</code></p> <p>Specifies the name of the data series dispalyed at the first position on the tooltip</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/interfaces/Tooltip/#shadowcolor","title":"shadowColor?","text":"<p><code>optional</code> shadowColor: <code>Color</code></p> <p>Color of the drop shadow</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Angle/","title":"Angle","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Angle</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Angle/#type-alias-angle","title":"Type Alias: Angle","text":"<p>Angle: <code>`${number}rad`</code> | <code>`${number}grad`</code> | <code>`${number}deg`</code> | <code>`${number}turn`</code> | <code>number</code></p> <p>Angle can be set in radians, degrees, gradians and turns. Radians is the default unit.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Color/","title":"Color","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Color</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Color/#type-alias-color","title":"Type Alias: Color","text":"<p>Color: <code>`#${string}`</code> | <code>`rgb(${number},${number},${number})`</code> | <code>`rgba(${number},${number},${number},${number})`</code></p> <p>The following CSS color formats are available: rgb(), rgba(), <code>#RRGGBB</code>, <code>#RRGGBBAA</code>, <code>#RGB</code>.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorGradient/","title":"ColorGradient","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / ColorGradient</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorGradient/#type-alias-colorgradient","title":"Type Alias: ColorGradient","text":"<p>ColorGradient: <code>ColorStop</code> | <code>`${ColorStop},${ColorStop}`</code> | <code>`${ColorStop},${ColorStop},${ColorStop}`</code> | <code>`${ColorStop},${ColorStop},${ColorStop},${ColorStop}`</code> | <code>`${ColorStop},${ColorStop},${ColorStop},${ColorStop},${ColorStop}`</code> | <code>string</code></p> <p>Color gradient is specified by a comma separated list of ColorStops. This is used when a measure is on the color channel.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorPalette/","title":"ColorPalette","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / ColorPalette</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorPalette/#type-alias-colorpalette","title":"Type Alias: ColorPalette","text":"<p>ColorPalette: <code>Color</code> | <code>`${Color} ${Color}`</code> | <code>`${Color} ${Color} ${Color}`</code> | <code>`${Color} ${Color} ${Color} ${Color}`</code> | <code>`${Color} ${Color} ${Color} ${Color} ${Color}`</code> | <code>string</code></p> <p>Color palette is a list of colors separated by spaces. This is used when only dimensions are on the color channel</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorStop/","title":"ColorStop","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / ColorStop</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorStop/#type-alias-colorstop","title":"Type Alias: ColorStop","text":"<p>ColorStop: <code>`${Color} ${number}`</code></p> <p>Color and position pairs separated by spaces, where position is a number between 0 and 1.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorTransform/","title":"ColorTransform","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / ColorTransform</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/ColorTransform/#type-alias-colortransform","title":"Type Alias: ColorTransform","text":"<p>ColorTransform: <code>`color(${Color})`</code> | <code>`lightness(${number})`</code> | <code>`grayscale(${number})`</code> | <code>`opacity(${number})`</code> | <code>\"none\"</code></p> <p>The following CSS like filters can be used to alter the color:</p> <ul> <li>color: overrides the color.</li> <li>lightness: lightens or darkens the color; 0 means the original color, -1 means     black, 1 means white.</li> <li>grayscale: desaturates the color. 0 means the original color, 1 means fully     desaturated.</li> <li>none: no change.</li> </ul>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Label/","title":"Label","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Label</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Label/#type-alias-label","title":"Type Alias: Label","text":"<p>Label: <code>Padding</code> &amp; <code>Font</code> &amp; <code>Text</code></p> <p>Represents a Label.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Length/","title":"Length","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / Length</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/Length/#type-alias-length","title":"Type Alias: Length","text":"<p>Length: <code>`${number}px`</code> | <code>`${number}%`</code> | <code>`${number}em`</code> | <code>number</code></p> <p>Length can be set in pixels or in percentage of the element or the element's font size. Pixel is the default unit.</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/NumberScale/","title":"NumberScale","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu / Styles / NumberScale</p>"},{"location":"reference/namespaces/Vizzu/namespaces/Styles/type-aliases/NumberScale/#type-alias-numberscale","title":"Type Alias: NumberScale","text":"<p>NumberScale: <code>\"SISymbol\"</code> | <code>\"shortScaleSymbolUS\"</code> | <code>\"shortScaleSymbolUK\"</code> | <code>`${string},${string}`</code> | <code>`${string},${string},${string}`</code> | <code>`${string},${string},${string},${string}`</code> | <code>string</code></p> <p>Number scale for human-readable big number formats. There are built in formats:</p> <ul> <li>SI Symbols: k, M, G, ...</li> <li>Short scale with US abbreviations: K, M, B, T</li> <li>Short scale with UK abbreviations: k, m, bn, tn Can be set to custom format     with a comma separated list of strings e.g:     'thousand,million,billion,trillion'</li> </ul>"},{"location":"reference/type-aliases/Slide/","title":"Slide","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Slide</p>"},{"location":"reference/type-aliases/Slide/#type-alias-slide","title":"Type Alias: Slide","text":"<p>Slide: <code>Phase</code> | <code>Phase</code>[]</p> <p>Slide consists of a single or multiple phase. Controls will navigate between slides.</p>"},{"location":"reference/type-aliases/Vizzu/","title":"Vizzu","text":"<p>Vizzu-Story</p> <p>Vizzu-Story / Vizzu</p>"},{"location":"reference/type-aliases/Vizzu/#type-alias-vizzu","title":"Type Alias: Vizzu","text":"<p>Vizzu: typeof <code>vizzu</code></p>"},{"location":"tutorial/","title":"Tutorial","text":"<p>This is an excellent starting point to get acquainted with <code>Vizzu-Story</code>, as it walks you through the installation and initialization of the extension, introduces the logic it employs and the different settings to control how your animated data stories look and behave.</p> <p>The tutorial is organized into chapters that introduce the concept and the details of <code>Vizzu-Story</code> step-by-step. You can find the list of chapters at the end of this page and in the menu.</p> <p>Since <code>Vizzu-Story</code> is built on top of Vizzu, it's recommended that you learn and understand <code>Vizzu</code> first. The tutorial for <code>Vizzu</code> can be found here.</p>"},{"location":"tutorial/#basic-logic-of-vizzu-story","title":"Basic logic of Vizzu-Story","text":"<p>With <code>Vizzu-Story</code>, you can build and show a <code>story</code> object that contains all of the data being shown throughout the story and the charts created based on that data, arranged into <code>slides</code> and <code>steps</code>. When played,<code>Vizzu-Story</code> automatically adds a set of buttons underneath the chart, via which the users can navigate between the <code>slides</code> within the story.</p> <p><code>slides</code> can contain one or more <code>steps</code>.</p> <p>A <code>step</code> (and a single-step <code>slide</code>) is basically the same as a single chart corresponding to an animate call from <code>Vizzu</code>, with a minor, but important difference:</p> <ul> <li>all of the data has to be added to the story at initialization, and it can be     filtered at every <code>step</code> throughout the <code>story</code>.</li> </ul> <p>In case of a <code>slide</code> with multiple <code>steps</code>, all, but the last <code>steps</code> are interim charts that connect a <code>slide</code> with a previous <code>slide</code> but the animation will not stop at these <code>steps</code> when the <code>story</code> is being played.</p>"},{"location":"tutorial/#installation","title":"Installation","text":"<p>Install via npm:</p> <pre><code>npm install vizzu-story</code></pre> <p>Or use it from CDN:</p> <pre><code>import VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'</code></pre> <p>Visit Installation chapter for more options and details.</p>"},{"location":"tutorial/#usage","title":"Usage","text":"<ul> <li>Data</li> <li>Initialization</li> <li>Building blocks</li> </ul>"},{"location":"tutorial/building_blocks/","title":"Building blocks","text":"<p>In <code>Vizzu-Story</code>, you can build and show a <code>story</code> object that contains all of the data being shown throughout the story and the charts created based on that data, arranged into <code>slides</code> and <code>steps</code>.</p>"},{"location":"tutorial/building_blocks/#slides-and-steps","title":"Slides and steps","text":"<p>Create the data story by defining a sequence of slides. A slide can be a single chart corresponding to an animate call from <code>Vizzu</code>. Or a slide can be a sequence of animation calls, in which case all of these animations will be played until the last one in the sequence, allowing for more complex transitions between slides.</p> <pre><code>const slides = [\n    // This slide contains a single animation step\n    {\n        config: {\n            x: 'Foo',\n            y: 'Bar'\n        }\n    },\n    // This slide contains multiple steps\n    [{\n        config: {\n            color: 'Foo',\n            x: 'Baz',\n            geometry: 'circle'\n        }\n    }, {\n        config: {\n            color: 'Foo',\n            x: 'Baz',\n            geometry: 'rectangle'\n        }\n    }],\n]</code></pre> <p>Navigation controls beneath the chart will navigate between the slides. You can use the <code>PgUp</code> and <code>PgDn</code> buttons, left and right arrows to navigate between slides, and the <code>Home</code> and <code>End</code> buttons to jump to the first or last slide.</p> <p>On each chart, you can define the chart configuration and style with the same objects as in <code>Vizzu</code>. However, you can not modify the underlying data between the slides, only the data filter used.</p> <pre><code>interface Chart {\n  config?: Vizzu.Config.Chart\n  filter?: Vizzu.Data.FilterCallback | null\n  style?: Vizzu.Styles.Chart\n  animOptions?: Vizzu.Anim.Options\n}</code></pre> <pre><code>const slides = [\n    // This slide sets config, filter, style and animOptions\n    {\n        config: {\n            x: 'Foo',\n            y: 'Bar'\n        },\n        filter: record =&gt; record['Foo'] === 'Bob',\n        style: {\n            plot: {\n                marker: {\n                    colorPalette: '#FF0000'\n                }\n            }\n        },\n        animOptions: {\n            duration: 1\n        }\n    }\n]</code></pre> <p>Tip</p> <p>Check Vizzu - Filtering &amp; adding new records chapter and Vizzu - Style chapter for more details on data filtering and style options.</p>"},{"location":"tutorial/building_blocks/#story","title":"Story","text":"<p>Put the <code>data</code> object (described in the Data chapter) and the slide list into the <code>story</code> descriptor object.</p> <pre><code>const story = {\n    data: data,\n    slides: slides\n}</code></pre> <p>Here you can also set the <code>story</code> <code>style</code> property to set the chart style used for the whole <code>story</code>.</p> <pre><code>const style = {\n    title: {\n        fontSize: 50\n    }\n}\n\nconst story = {\n    data: data,\n    style: style,\n    slides: slides\n}</code></pre> <p>Then set up the created element with the configuration object:</p> <pre><code>const vp = document.querySelector('vizzu-player')\nvp.slides = story</code></pre>"},{"location":"tutorial/building_blocks/#chart-features","title":"Chart features","text":"<p>You can enable or disable chart features, such as the <code>Tooltip</code> that appears if the viewer hovers their mouse over a specific element of the chart.</p> <pre><code>vp.initializing.then((chart) =&gt; {\n    chart.feature(\"tooltip\", true)\n})</code></pre> <p>Tip</p> <p>See Vizzu - Axes, title, tooltip chapter for more details on chart features.</p>"},{"location":"tutorial/building_blocks/#chart-events","title":"Chart events","text":"<p>You have many more options to change the look and feel of the <code>story</code> by using events.</p> <pre><code>vp.initializing.then((chart) =&gt; {\n    chart.on(\"click\", (event) =&gt; {\n        alert(JSON.stringify(event.detail))\n    })\n})</code></pre> <p>Tip</p> <p>See Vizzu - Events chapter for more details on events.</p>"},{"location":"tutorial/data/","title":"Data","text":"<p>You can use the same data definition formats as in the <code>Vizzu</code> library. Similarly, there are two types of data series: dimensions and measures.</p> <p>Note</p> <p>Please note, that all of the data used throughout your data story has to be added to the story at initialization. The data being shown can be filtered at each step.</p> <p>Tip</p> <p>See Vizzu - Data chapter for more details about data.</p> <p>Here's some sample code for common use cases.</p>"},{"location":"tutorial/data/#specify-data-by-series","title":"Specify data by series","text":"<pre><code>const data = {\n    series: [{\n        name: 'Foo',\n        values: ['Alice', 'Bob', 'Ted']\n    }, {\n        name: 'Bar',\n        values: [15, 32, 12]\n    }, {\n        name: 'Baz',\n        values: [5, 3, 2]\n    }]\n}</code></pre>"},{"location":"tutorial/data/#specify-data-by-records","title":"Specify data by records","text":"<pre><code>const data = {\n    series: [{\n        name: 'Foo',\n        type: 'dimension',\n    }, {\n        name: 'Bar',\n        type: 'measure',\n    }, {\n        name: 'Baz',\n        type: 'measure',\n    }],\n    records: [\n        ['Alice', 15, 5],\n        ['Bob', 32, 3],\n        ['Ted', 12, 2],\n    ],\n}</code></pre>"},{"location":"tutorial/initialization/","title":"Initialization","text":""},{"location":"tutorial/initialization/#import","title":"Import","text":"<p>In a script module element import the extension from <code>CDN</code> or local install:</p> <pre><code>&lt;script type=\"module\"&gt;\n  import VizzuPlayer from \n  'https://cdn.jsdelivr.net/npm/vizzu-story@0.8/dist/vizzu-story.min.js'\n&lt;/script&gt;</code></pre>"},{"location":"tutorial/initialization/#constructor","title":"Constructor","text":"<p>In order to initialize a <code>VizzuPlayer</code> with a <code>VizzuController</code> that will contain the rendered <code>story</code>, create a <code>vizzu-player</code> <code>HTML</code> element:</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre>"},{"location":"tutorial/initialization/#size","title":"Size","text":"<p><code>Vizzu-Story</code> tries to apply the ideal size for the story, but you can also set them manually via the <code>width</code> and <code>height</code> style properties of the <code>vizzu-player</code> <code>HTML</code> element:</p> <p>Set size in <code>HTML</code></p> <pre><code>&lt;head&gt;\n  &lt;style&gt;\n    vizzu-player {\n      width: 100%;\n      height: 400px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;\n&lt;/body&gt;</code></pre> <p>or in <code>JavaScript</code>:</p> <pre><code>const vp = document.querySelector('vizzu-player')\nvp.style.cssText = 'width: 100%;height: 400px;'</code></pre>"},{"location":"tutorial/initialization/#html-attributes","title":"HTML attributes","text":""},{"location":"tutorial/initialization/#vizzu-url","title":"vizzu-url","text":"<p><code>Vizzu-Story</code> requires and downloads the Vizzu <code>JavaScript</code>/<code>C++</code> library from <code>jsDelivr CDN</code>, but you can also use a different or self-hosted version of it.</p> <p>Set <code>Vizzu</code> via the <code>vizzu-url</code> <code>HTML</code> attribute</p> <pre><code>&lt;vizzu-player controller vizzu-url=\"&lt;url&gt;/vizzu.min.js\"&gt;&lt;/vizzu-player&gt;</code></pre> <p>or add it to <code>window</code>:</p> <pre><code>import Vizzu from '&lt;url&gt;/vizzu.min.js'\n\n\nwindow.Vizzu = Vizzu</code></pre> <p>Info</p> <p>After initialization, you can access the imported <code>Vizzu</code> library via the <code>Vizzu</code> getter.</p> <pre><code>const vp = document.querySelector('vizzu-player')\n\nvp.initializing.then((chart) =&gt; {\n    const Vizzu = vp.Vizzu\n})</code></pre>"},{"location":"tutorial/initialization/#hash-navigation","title":"hash-navigation","text":"<p>If you add <code>hash-navigation</code> attribute, slides can be selected using the <code>URL</code> hash (<code>#</code> part), for example <code>presentation.html#3</code> selects slide <code>3</code>. You can also use negative numbers, where <code>-1</code> means the last slide.</p> <pre><code>&lt;vizzu-player controller hash-navigation&gt;&lt;/vizzu-player&gt;</code></pre>"},{"location":"tutorial/initialization/#start-slide","title":"start-slide","text":"<p>You can start the story on a specific slide via the <code>start-slide</code> <code>HTML</code> attribute. You can also use negative numbers, where <code>-1</code> means the last slide.</p> <pre><code>&lt;vizzu-player controller start-slide=\"3\"&gt;&lt;/vizzu-player&gt;</code></pre>"},{"location":"tutorial/initialization/#custom-spinner","title":"custom-spinner","text":"<p>You can use a custom loading animation. Set spinner via the <code>custom-spinner</code> <code>HTML</code> attribute:</p> <pre><code>&lt;vizzu-player controller custom-spinner=\"loadinganim.svg\"&gt;&lt;/vizzu-player&gt;</code></pre>"}]}